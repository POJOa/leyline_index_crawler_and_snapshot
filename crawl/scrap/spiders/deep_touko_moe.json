[
{"keywords": "下載內核安裝對應內核查看當前已經安裝的內核刪除舊內核更新引導重啟系統即可相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2017-01-13            分类: Linux,Dev            访问: 438 次                            測試BBR，進行多次更換內核操作。記錄一下整個過程。下載內核先去尋找內核對應文件。例如http://kernel.ubuntu.com/~kernel-ppa/mainline/https://packages.debian.org安裝對應內核dpkg -i *下載的文件* 查看當前已經安裝的內核dpkg -l|grep linux-image刪除舊內核apt-get purge *舊內核名字* 更新引導update-grub重啟系統即可                                   标签: Debian, Kernel, Ubuntu                            相关文章推荐                                            VMWare配置Debian8                                                        上一篇: Owncloud安裝與配置（Debian）            下一篇: 在Windows控制台下使用C語言實現俄羅斯方塊                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.192 s.", "link": "https://touko.moe/blog/fast-change-kernel-in-deb", "title": "Debian / Ubuntu快速更换内核"},
{"keywords": "main.c簡單思路文件構成翻轉詳解源碼地址action.c簡單思路文件構成翻轉詳解源碼地址block.c簡單思路文件構成翻轉詳解源碼地址renderer.c簡單思路文件構成翻轉詳解源碼地址renderer.c簡單思路文件構成翻轉詳解源碼地址相关文章推荐簡單思路文件構成翻轉詳解源碼地址文章搜索簡單思路文件構成翻轉詳解源碼地址文章分類簡單思路文件構成翻轉詳解源碼地址最新文章簡單思路文件構成翻轉詳解源碼地址歸檔簡單思路文件構成翻轉詳解源碼地址熱門標籤簡單思路文件構成翻轉詳解源碼地址關於我簡單思路文件構成翻轉詳解源碼地址關於部落格", "text": "作者: HoshinoTouko            时间: 2017-04-29            分类: Dev,Windows            访问: 128 次                            在Windows的控制台下使用C語言實現俄羅斯方塊這是CSAPP課程的作業，助教問了我情況之後就愉快的決定了稍微思考了一下，因為是經典的遊戲程序，本身邏輯並不是很複雜，而且肯定也有很多類似的程序了。這裡僅僅提供自己的思路。簡單思路俄羅斯方塊本質上來講，是一個在二維地圖上進行操作的遊戲，自然我們需要一張二維圖來表示這個遊戲地圖。然而我們使用的是C語言。。。。好吧我們定義一個int二維數組的全局變量作為這張地圖的表示。二維地圖也要遵守基本法，自然我們需要給這張圖上每個點做一個定義。當這個點為0的時候，表示這個地方沒有方塊。這個點為1的時候，表示這個點存在一個已經落地的方塊。當這個點大於1的時候，表示這是一個可以活動的點。至於這個可以活動的點具體數值代表什麼，我們之後討論。我們需要一個對方塊進行操作的函數。這個函數用於處理可活動方塊，包括左右移動和向下活動。如果按下↑鍵，則循環調用向下運動直到觸底。當進行方塊操作時，我們需要一些判定。比如方塊是否觸底，觸底之後方塊是否足夠一行（一整行就消去然後進行分數累加）等等操作。我們需要一個對時間進行計數的計數器。為了處理這個時間，我開了一個線程用於統計。每當時間間隔超過1s，自動調用向下移動的函數。之後是翻轉。這個是最難的操作。稍微將俄羅斯方塊的方塊類型分個類，其中2x2的方塊無需翻轉；正反L形方塊可以放在3x3的矩陣中翻轉，並且翻轉方向是90°x4次；正反閃電形方塊也可以放在3x3的矩陣中進行翻轉，翻轉方向是一次順時針，一次逆時針；“凸”形的方塊和L形類似，可以翻轉四次，並且在3x3的矩陣中判斷；長條形方塊由於有四個，可以單獨進行一次判斷，翻轉方向為順時針、逆時針各一次。具體可以參考後文“翻轉詳解”文件構成一個好的程序，就算代碼量不多，也應該具有良好的可讀性和可維護性。所以我將文件分為main.caction.cblock.crenderer.ctimer.cmain.c這裡用作處理主線程，包括定義全局變量，處理控制台，開啟後台進程，程式啟動參數設置，隨機一個方塊類型，重置地圖，監聽鍵盤事件等等。其中監聽鍵盤事件是通過conio.h中的getch()函數實現，並且使用while (1)進行持續監聽。捕捉鍵盤事件之後進行操作。action.c這裡主要處理地圖的一些操作。比如封裝了一個操作用來給地圖x，y坐標處賦值n：void set(int xn, int yn, int n)。方塊的移動函數就放在這裡面void moveAction(int d)。block.c這裡主要放置用於處理方塊的函數，比如新建方塊：newTetris()；凍住方塊（把所有值大於1的坐標值設置成1）：frozen()。renderer.c這裡用於存放繪製界面的函數。應用了雙重緩衝技術，可以有效的避免閃屏現象，也無需使用goto函數進行坐標定位。雙重緩衝的原理是這樣的，先新建一個console窗體用作緩衝區，但是此時緩衝區不會顯示。待繪製完成之後，將緩衝區顯示在屏幕上，這樣就避免了print字符時的單行刷新感。    HANDLE hNewConsole = CreateConsoleScreenBuffer(GENERIC_WRITE | GENERIC_READ,                         0,                         NULL,                         CONSOLE_TEXTMODE_BUFFER,                         NULL);    CONSOLE_CURSOR_INFO cci = {1, 0};    SetConsoleCursorInfo(hNewConsole, &cci);        /* ......Other code...... */    WriteConsole(hNewConsole, *statusInfo, strlen(*statusInfo), NULL, NULL);    WriteConsole(hNewConsole, *scoreInfo, strlen(*scoreInfo), NULL, NULL);    WriteConsole(hNewConsole, scoreStr, strlen(scoreStr), NULL, NULL);    SetConsoleActiveScreenBuffer(hNewConsole);renderer.c這裡用於運行後台線程（計時用）。因為我只需要以秒為最小單位，所以我調用了函數time()來獲取UNIX時間戳。實際應用中可以調用stdlib.h庫中的clock()，最小單位是ms。翻轉詳解翻轉是一個讓人頭疼的事，我定義了幾種處理方法。除了2x2的方塊以外，其他方塊都包含一個中心塊。中心塊的值為3, 4, 5, 6。當中心塊為3或者4的時候，對以此為中心塊的3x3矩陣進行一次順時針旋轉。旋轉之前會判斷一次是否會與已經固定的方塊碰撞或者撞墻（即無法翻轉）。如果無法翻轉，則不進行操作。中心塊為3和4的區別是，當中心塊為4的方塊進行翻轉后，將4改為5。那麼就可以很容易知道了，中心塊為5的方塊是進行逆時針翻轉判定用的。中心塊為6時，表示對長條形進行特殊的判斷，判斷能否翻轉，邏輯與上文類似。以下是rotate()的源碼void rotate() {    //If is lost, return    if (gameStatus == 2) {        return;    }    bool isFind = false;    //central x and y (1, 1)    int cenX, cenY;    //Find where is the central block    for (cenY=0; cenY<y; cenY++){        for (cenX=0; cenX<x; cenX++){            if (tetMap[cenY][cenX] > 2){                isFind = true;                break;             }        }        if (isFind){            break;        }    }    int tempMap[10][10];    int i, j;    switch (tetMap[cenY][cenX]){        /* ClockWice */         case 3:        case 4:            if (cenX == 0 || cenX == x-1){                break;            }            /* Generate a temp map which size is(3x3) */            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    tempMap[i-(cenX-1)][2+(cenY-1)-j] = tetMap[j][i];                }            }            /* Compare two maps and transport values */            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    if (tempMap[j-(cenY-1)][i-(cenX-1)] == 2 && tetMap[j][i] == 1){                        return;                    }                }            }            /* If can, rotate */            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    if (tetMap[j][i] == 2){                        tetMap[j][i] = 0;                    }                }            }            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    if (tempMap[j-(cenY-1)][i-(cenX-1)] == 2){                        tetMap[j][i] = tempMap[j-(cenY-1)][i-(cenX-1)];                    }                 }            }            //If the central block is 4, set it to 5            if (tetMap[cenY][cenX] == 4){                tetMap[cenY][cenX] = 5;            }            break;        /* AntiClockWice */         case 5:            if (cenX == 0 || cenX == x-1){                break;            }            /* Generate a temp map which size is(3x3) */            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    tempMap[2+(cenX-1)-i][j-(cenY-1)] = tetMap[j][i];                }            }            /* Compare two maps and transport values */            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    if (tempMap[j-(cenY-1)][i-(cenX-1)] == 2 && tetMap[j][i] == 1){                        return;                    }                }            }            /* If can, rotate */            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    if (tetMap[j][i] == 2){                        tetMap[j][i] = 0;                    }                }            }            for (j=cenY-1; j<cenY+2; j++){                for (i=cenX-1; i<cenX+2; i++){                    if (tempMap[j-(cenY-1)][i-(cenX-1)] == 2){                        tetMap[j][i] = tempMap[j-(cenY-1)][i-(cenX-1)];                    }                 }            }            //If the central block is 5, set it to 4            if (tetMap[cenY][cenX] == 5){                tetMap[cenY][cenX] = 4;            }            break;        /* Resolve rectantangle */        case 6:            if (cenX == 0 || cenX > x-3 && tetMap[cenY-1][cenX] == 2){                break;            }            if (tetMap[cenY-1][cenX] == 2){                if (                  tetMap[cenY][cenX-1]+                  tetMap[cenY][cenX+1]+                  tetMap[cenY][cenX+2] == 0                ){                    tetMap[cenY][cenX-1] = 2;                    tetMap[cenY][cenX+1] = 2;                    tetMap[cenY][cenX+2] = 2;                    tetMap[cenY-1][cenX] = 0;                    tetMap[cenY+1][cenX] = 0;                    tetMap[cenY+2][cenX] = 0;                }            }            else{                if (                  tetMap[cenY-1][cenX]+                  tetMap[cenY+1][cenX]+                  tetMap[cenY+2][cenX] == 0                ){                    tetMap[cenY][cenX-1] = 0;                    tetMap[cenY][cenX+1] = 0;                    tetMap[cenY][cenX+2] = 0;                    tetMap[cenY-1][cenX] = 2;                    tetMap[cenY+1][cenX] = 2;                    tetMap[cenY+2][cenX] = 2;                }            }        /* No action */        default:            break;    } }源碼地址這玩意兒已經在Github上開源，地址為https://github.com/HoshinoTouko/Tetris                                   标签: 俄羅斯方塊, C, CSAPP                            相关文章推荐                                                                    上一篇: Debian / Ubuntu快速更换内核            下一篇: 没有了                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.095 s.", "link": "https://touko.moe/blog/C-Tetris-on-Windows", "title": "在Windows控制台下使用C語言實現俄羅斯方塊"},
{"keywords": "選擇大素數生成公鑰私鑰密鑰對發佈密鑰加密與解密相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2016-09-24            分类: Dev,Tech,web            访问: 437 次                            RSA實現步驟選擇大素數任意選擇兩個素數p q，這兩個素數應是保密的。一般情況下選擇100~200位的十進制數。令n = p×q，再計算n的歐拉函數ψ(n)=(p-1)×(q-1)。這幾個數中，n可以公開。生成公鑰私鑰密鑰對隨機選擇一個與ψ(n)互素的整數e作為公鑰(Public key)，再根據算式e × d = 1 (mod ψ(n))，計算出d作為私鑰(Private key)。這是一個求乘法逆元的過程。私鑰是保密的，公鑰是公開的。發佈密鑰私鑰(d, n)保密，公鑰(e, n)公開即可。加密與解密加密時，先將明文比特串分組，使每個分組的十進制數小於n（即比特串分組長度小於log2(n)），然後對每個明文分組m加密運算：c = m^e mod n解密同理，對密文分組進行解密運算：m = c^d mod n數學證明∵c = m^e mod n∴c^d mod n = m^(ed) mod n∵ed = 1 (mod ψ(n))∴ed = kψ(n) + 1∴c^d mod n = m^(kψ(n) + 1) mod n①当m n互素時由歐拉定理可得：m^(ψ(n)) mod n = 1∴m^(kψ(n)) mod n = 1∴m^(kψ(n) + 1) mod n = m即m^(ed) mod n = m得證②当m n不互素情況概率小於1/p + 1/q，故可以不做考慮。（本身也可以證明，不過較為繁瑣）演示代碼寫了一個不好看的C++演示代码，有興趣的可以試試看#include<iostream>#include<ctime>#include<cstdlib>#include<cmath>#include<windows.h>#include<sstream>#include<string>using namespace std;long int gcd(long int a, long int b){    if(b == 0)        return a;    return gcd(b, a % b);}double random(double start, double end){    return start+(end-start)*rand()/(RAND_MAX + 1.0);}long int fastModel(long int base, long int power, long int model){    long int temp = 1;    long int result = 0;    while(power != 1){        if(power % 2 == 0){            power /= 2;            base = base*base % model;            //cout<<\"/2\\n\"<<base<<\" \"<<power<<\" \"<<model<<\" \"<<\"\\n\";        }        else if(power % 2 != 0){            power -= 1;            temp = temp*base % model;            //cout<<\"-1\\n\"<<base<<\" \"<<power<<\" \"<<model<<\" \"<<\"\\n\";        }    }    result = temp * base % model;    if (result <= 0){        result += model;    }    return (long int)result;}bool isPrime(long int t){    long int r = 0;    long int d = t-1;    if(t%2 == 0 and t != 2){        return false;    }    else if(t == 2){        return true;    }     else{        do{            r++;            d /= 2;            //cout<<d<<\"\\n\";            if (fastModel(2, d, t) != 1){               if (fastModel(2, d, t) != t-1){                   return false;               }               else{                   return true;               }            }         }        while( d % 2 == 0);    }    return true;}long int ranFakePrime(){    long int t;    srand(unsigned(time(0)));    do{        t = random(10, 150);    }    while( fastModel(2, t-1, t) != 1 );    return t;}long int generatePrime(){    long int t;    do{        t = ranFakePrime();    }    while( !isPrime(t) );    return t;}long int getOpposite(long int a, long int n){    long int Q, X1, X2, X3, Y1, Y2, Y3, T1, T2, T3;    X1=1;X2=0;X3=n;Y1=0;Y2=1;Y3=a;    while(Y3 != 0 and Y3 != 1){        Q = X3/Y3;        T1 = X1 - Q * Y1;        T2 = X2 - Q * Y2;        T3 = X3 - Q * Y3;        X1 = Y1; X2 = Y2; X3 = Y3;        Y1 = T1; Y2 = T2; Y3 = T3;    }    if (Y3 == 1){        if (Y2 < 0){            return n + Y2;        }        else{            return Y2;        }    }    else{        return 0;    }}string rsaEncrypt(string ori_str, long int en_key, long int n){    stringstream en_str;    long int t;    for (int i = 0; i!= ori_str.length(); i++){        t = fastModel(int(ori_str[i]), en_key, n);        //cout<<\"...\";        en_str<<t<<\"_\";    }    return en_str.str();}string rsaDecrypt(string ori_str, long int de_key, long int n){    stringstream de_str, tstr;    long int t;    for (int i = 0; i!= ori_str.length(); i++){         if(ori_str[i] == '_'){            tstr>>t;            de_str<<char(fastModel(t, de_key, n));            tstr.str(\"\");            tstr.clear();        }        else{            tstr<<ori_str[i];        }     }    return de_str.str();}int main(){    long int p, q, n, fn, pub, pri;    p = generatePrime();    Sleep(1000);    q = generatePrime();    n = p*q;    fn = (p-1)*(q-1);    //Print primes    cout<<\"p = \"<<p<<\" \"<<\"q = \"<<q<<\"\\n\";    cout<<\"n = \"<<n<<\" \"<<\"fn = \"<<fn<<\"\\n\\n\";    //Generate public key    do{        pub = random(p,n);    }     while(gcd(pub, fn) != 1);    //Generate private key    pri = getOpposite(pub, fn);    //Print keys    cout<<\"pub-key = \"<<pub<<\" \"<<\"pri-key = \"<<pri<<\"\\n\\n\";    string ori_str, en_str, de_str;    char method_str;    bool ex = true;    int method;    do{        cin>>method_str;        method = int(method_str);        switch(method){            case 'e':                cin>>ori_str;                cout<<rsaEncrypt(ori_str, pub, n)<<\"\\n\";                break;            case 'd':                cin>>ori_str;                cout<<rsaDecrypt(ori_str, pri, n)<<\"\\n\";                break;            default:                ex = false;                break;        }    }     while(ex);    return 0;}                                   标签: RSA                            相关文章推荐                                            RSA基礎知識                                                        上一篇: RSA基礎知識            下一篇: 快速轉移MySQL數據庫存儲位置                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.062 s.", "link": "https://touko.moe/blog/rsa-encrypt", "title": "RSA原理和實踐"},
{"keywords": "相关文章推荐找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試文章搜索找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試文章分類找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試最新文章找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試歸檔找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試熱門標籤找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試關於我找到My.cnf複製數據庫刪除/備份原有數據庫創建軟連接測試關於部落格", "text": "作者: HoshinoTouko            时间: 2016-11-28            分类: Linux,Dev            访问: 287 次                              如題找到My.cnf可以發現下列語句datadir=/var/lib/mysql或者別的，這無所謂。複製數據庫現將該目錄copy一份至想要轉移到的目錄，比如掛載的硬盤上。這裡用 /home/mysql_data 作為例子cp -p /var/lib/mysql /home/mysql_data-p參數十分重要，MySQL對目錄權限要求很高，-p參數可以將目錄權限一同複製到新的目錄內。刪除/備份原有數據庫mv /var/lib/mysql /var/lib/mysql-backup創建軟連接ln -s /home/mysql_data /var/lib/mysql測試sudo service mysqld restart如果沒有報錯，則轉移成功                                   标签: mysql                            相关文章推荐                                                                    上一篇: RSA原理和實踐            下一篇: Owncloud安裝與配置（Debian）                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.082 s.", "link": "https://touko.moe/blog/change-the-path-of-mysql", "title": "快速轉移MySQL數據庫存儲位置"},
{"keywords": "ARIA2ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝YouTube-DL ProviderownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝相关文章推荐ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝文章搜索ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝文章分類ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝最新文章ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝歸檔ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝熱門標籤ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝關於我ownCloudAPC and memcache如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）依賴安裝關於部落格", "text": "作者: HoshinoTouko            时间: 2016-12-03            分类: Linux,Dev,php,web            访问: 550 次                              這是一個簡單的配置ownCloud的教程。安裝準備先安裝好伺服器環境，我使用的是LAMP。文件下載ownCloudhttps://owncloud.org/配置ownCloud解壓縮，安裝數據庫略。在 .htaccess 內#### DO NOT CHANGE ANYTHING ABOVE THIS LINE ####下添加我們熟悉的代碼<IfModule mod_headers.c>  Header always set Strict-Transport-Security \"max-age=15552000; includeSubDomains\"  RewriteEngine on  RewriteCond %{HTTPS} !^on$   RewriteRule (.*) https://%{SERVER_NAME}%{REQUEST_URI} [R=302]  </IfModule> APC and memcachesudo apt-get install php5-apcsudo apt-get install memcached php5-memcached php5-memcache  sudo service apache2 restart  查看并添加memcache支援ps ax | grep memcached  出現如下文字即安裝成功19563 ? Sl 0:02 /usr/bin/memcached -m 64 -p 11211 -u memcache -l127.0.0.1在config.php最後添加'memcache.local' => '\\OC\\Memcache\\APC',  'memcache.distributed' => '\\OC\\Memcache\\Memcached',  'memcached_servers' => array(    array('localhost', 11211),    ),即可如果需要ocDownloader（注意只能在ownCloud 8.0-8.1運行）https://github.com/DjazzLab/ocdownloader依賴安裝ARIA2我是用的是Debian 8。ARIA2是Debian的官方repo，所以比較容易。sudo apt-get install aria2 curl php5-curlsudo aria2c --enable-rpc --rpc-allow-origin-all -c -D --log=/var/log/aria2.log --check-certificate=falseYouTube-DL Providersudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dlsudo chmod a+x /usr/local/bin/youtube-dlReference：https://wiki.sgc-univ.net/index.php/OCDownloader:Requirements_%28Linux_Debian_-_JESSIE%29https://wiki.sgc-univ.net/index.php/OCDownloader:Install_The_YouTube-DL_Providerhttps://wiki.sgc-univ.net/index.php/OCDownloader:Aria2_fallback_using_CURL_directly_%28Requirements%29https://doc.owncloud.org/server/9.1/admin_manual/configuration_server/harden_server.htmlhttps://doc.owncloud.org/server/9.1/admin_manual/configuration_server/caching_configuration.html                                   标签: ownCloud, ocDownloader, APC, memcache, memcached                            相关文章推荐                                                                    上一篇: 快速轉移MySQL數據庫存儲位置            下一篇: Debian / Ubuntu快速更换内核                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.115 s.", "link": "https://touko.moe/blog/install-ownCloud", "title": "Owncloud安裝與配置（Debian）"},
{"keywords": "安裝中文字體VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）更改默認源到中科大源VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）更新軟體，安裝常用軟體VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）安裝VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）啟動桌面VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）更改解析度VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）安裝ssVMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）新建json文件VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）啟動VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）配置软链接VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）相关文章推荐VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）文章搜索VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）文章分類VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）最新文章VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）歸檔VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）熱門標籤VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）關於我VMWare和Debian ISO安裝Debian初始化安裝桌面環境更改系統語言安裝deb包依賴使用shadowsocks安裝Phpstorm/Webstorm安装Xampp（PHP）關於部落格", "text": "作者: HoshinoTouko            时间: 2016-08-06            分类: Linux,Dev            访问: 471 次                              Windows的PHP又出問題了，所以弄了一個VMWare來跑Debian，並且打算作為開發環境。VMWare和Debian ISO我使用的是VMWare Workstation 12，可以直接讀出debian的ISO。系統ISO在中科大的鏡像https://mirrors.ustc.edu.cn/可以下載到。安裝Debian直接新建虛擬機器，掛載ISO，使用Graphical install安裝即可。VMWare設置中使用NAT網路橋接。不需要使用網路鏡像。初始化安裝中文字體apt-get install ttf-wqy-*更改默認源到中科大源vi /etc/apt/sources.list添加或者替換為deb http://mirrors.ustc.edu.cn/debian stable main contrib non-freedeb-src http://mirrors.ustc.edu.cn/debian stable main contrib non-freedeb http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-freedeb-src http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free詳見https://lug.ustc.edu.cn/wiki/mirrors/help/debian更新軟體，安裝常用軟體apt-get updateapt-get upgradeapt-get install vnstat vim git curl sudo #...此處隨意安裝桌面環境安裝apt-get install xfce4 xfce4-terminal啟動桌面在任意其他用戶下運行startx即可更改解析度xrandrxrandr -s 1920x1080更改系統語言apt-get install localesdpkg-reconfigure locales安裝deb包依賴dpkg -i xxx.deb提示失敗之後apt-get -f install使用shadowsocks安裝sspip install shadowsocks新建json文件{    \"server\":\"my_server_ip\",    \"server_port\":8388,    \"local_address\": \"127.0.0.1\",    \"local_port\":1080,    \"password\":\"mypassword\",    \"timeout\":300,    \"method\":\"aes-256-cfb\",    \"fast_open\": false,    \"workers\": 1}配置詳見https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File啟動sslocal xx.json如果需要chacha20加密，運行apt-get install libsodium-dev安裝Phpstorm/Webstorm從網站下載tar壓縮檔案，解壓並移動到任意目錄。這裡以Phpstorm為例，移動至/opt/phpstorm後，創建軟鏈接ln -s /opt/phpstorm/bin/phpstorm.sh /usr/local/bin/phpstorm安装Xampp（PHP）在https://www.apachefriends.org/download.html下载xx.run文件，然后chmod 755 xx.run./xx.run然后安装配置软链接ln -s /opt/lampp/bin/php /usr/local/bin/phpln -s /opt/lampp/bin/phar /usr/local/bin/phar                                   标签: Linux, Debian                            相关文章推荐                                            Debian / Ubuntu快速更换内核                                Debian/CentOS chacha20依賴安裝                                phpMyAdmin出現500錯誤問題及解決方案                                CentOS6.x 手动升级git至2.2.1                                                        上一篇: Windows下Xampp證書錯誤            下一篇: Modafinil的使用建議                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.040 s.", "link": "https://touko.moe/blog/Debian8-vmware", "title": "VMWare配置Debian8"},
{"keywords": "問題解決方法來源相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2016-08-05            分类: Windows,php            访问: 443 次                            問題Windows下使用Xampp環境跑PHP，更新Symfony時出現錯誤[GuzzleHttp\\Exception\\RequestException]cURL error 60: SSL certificate problem: unable to get local issuer certificate解決方法下載https://gist.github.com/VersatilityWerks/5719158/download拷貝至 xampp\\php\\extras\\ssl\\cacert.pem在php.ini的[curl]區塊中添加curl.cainfo = \"C:\\xampp\\php\\extras\\ssl\\cacert.pem\"來源http://stackoverflow.com/questions/29822686/curl-error-60-ssl-certificate-unable-to-get-local-issuer-certificate                                   标签: php, Xampp                            相关文章推荐                                            關於EasyPass                                Hello, Symfony                                拒絕百度 - 使用反向代理訪問Google                                phpMyAdmin出現500錯誤問題及解決方案                                                        上一篇: 關於高考            下一篇: VMWare配置Debian8                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.062 s.", "link": "https://touko.moe/blog/222", "title": "Windows下Xampp證書錯誤"},
{"keywords": "安裝1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料配置1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料安裝1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料配置1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料相关文章推荐1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料文章搜索1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料文章分類1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料最新文章1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料歸檔1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料熱門標籤1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料關於我1 修改端口2 使用公鑰/私鑰密鑰對登入3 使用fail2ban防止暴力破解密碼4 Port Knocking參考資料關於部落格", "text": "作者: HoshinoTouko            时间: 2016-05-30            分类: Linux,Dev            访问: 707 次                            最近不少友人開始使用自己的VPS，也遇上各種各樣的問題。不過拿到伺服器的第一件事，就是要保證自己伺服器的安全性。端口掃描腳本是一個很厲害的東西，也十分讓人煩惱。初次購買的VPS默認SSH端口為22，如果有看登入記錄會發現一旦IP地址暴露到網絡，每時每刻都有人在嘗試破解密碼。所以，當拿到VPS之後，務必第一時間進行一些安全防範的操作，update所有軟件包倒是其次了。本文介紹以下方式修改端口公鑰 / 私鑰fail2banport knocking1 修改端口修改ssh配置文件並重啟ssh服務vi /etc/ssh/sshd_config找到Port行，去掉頭部的#，修改為自定義端口# Debian / Ubuntuservice ssh restart# CentOS / RHELservice sshd restart這是最簡單的一種方式，也是效率最高的一種方式。90%以上的通過腳本的暴力破解都盯著22端口去，很少有人願意耗費成本去掃描其他的端口。如果是防範專門盯著你的伺服器去的人，下文將介紹其他方法。2 使用公鑰/私鑰密鑰對登入公鑰/私鑰對是很安全的登入方式之一，用戶只需要在伺服器創建公鑰/私鑰對，然後將私鑰用於身份驗證即可。依賴openssl，一般系統自帶，在生成之前可以upgrade一下。可以透過 man ssh-keygen查看具體操作命令。這裡提供一個配置ECC 521bit登入憑證的配置樣例。vi /etc/ssh/sshd_config找到#AuthorizedKeysFile     .ssh/authorized_keys將頭部的#去掉，保存退出。之後進入用戶目錄(可以通過命令cd直接進入)，創建一個.ssh目錄(如果不存在)。然後使用命令ssh-keygen -t ecdsa -b 521提示保存位置時，直接保存在默認目錄下即可。passphrase也不是必須的，只需要保證自己的私鑰保存在安全的位置。生成完成之後進入.ssh目錄cp id_ecdsa.pub authorized_keys將id_ecdsa保存至本地，推薦刪除位於伺服器的私鑰。最後重啟ssh保存設置，就可以使用私鑰登入了。3 使用fail2ban防止暴力破解密碼如果不希望使用密鑰對登入(因為不可能隨身攜帶私鑰)，可以透過fail2ban防止暴力破解。fail2ban是一個被廣泛使用的入侵保護開源框架，透過分析日誌文件來對特定入侵來源進行封鎖。期間需要使用iptables。安裝一般自帶rpm包，可以透過# Debian / Ubuntuapt-get install fail2ban iptables-persistent# CentOS / RHELyum install fail2ban iptablescd /etc/fail2ban可以看到，fail2ban配置文件包括了filter，action，jail，config四個部分。filter為監控log文件的部分，透過正則匹配日誌文件找到攻擊源。action為操作部分，進行fail2ban被激活之後的操作。fail2ban.conf無需進行修改。jail.d為監獄的配置文件，默認配置文件為jail.local，下面提供一個防止ssh暴力破解的範例。配置iptables首先配置iptables。fail2ban用的是黑名單的模式，所以如果沒有使用過iptables，只需要iptables -P INPUT ACCEPTiptables -F千萬不能直接全部清除！否則可能導致再也連接不上伺服器。fail2banvi /etc/fail2ban/jail.local[DEFAULT]# 以空格分隔的列表，可以是 IP CIDR 前綴或者 rDNS# 忽略fail2ban防護的ip地址ignoreip = 127.0.0.1 172.31.0.0/24 10.10.0.0/24 192.168.0.0/24# 默認禁止時間（second）bantime = 3600# 到達多少次後禁用maxretry = 5# 檢查多少時間內的日誌（second）findtime = 600mta = sendmail[ssh-iptables]enabled = truefilter = sshdaction = iptables[name=SSH, port=*SSH端口*, protocol=tcp]sendmail-whois[name=SSH, dest=admin@example.com, sender=fail2ban@example.com]# Debian / Ubuntu logpath = /var/log/auth.log# CentOS / RHELlogpath = /var/log/secure# 到達多少次後禁用(優先於默認配置)maxretry = 3保存退出，重啟fail2banservice fail2ban restart檢查服務運行狀態fail2ban-client ping本配置文件中，檢測到ssh log中某ip十分鐘內連續登入失敗三次，就會調用iptables，把目標IP ban一個小時。注: 配置文件中[DEFAULT]為默認配置區塊，優先度低於[ssh-iptables]。bantime，maxretry，findtime等如果衝突，以[ssh-iptables]為準。之後可以進行隨意的鏈接來測試fail2ban服務。如果多次密碼錯誤，你就會發現無法連上目標伺服器了。當然fail2ban的用處遠不止這些，具體可以根據filter.d和action.d內文件來編寫。4 Port Knocking這是一個創造性的發明，可以稱作是 '為自己開的後門'。如果說fail2ban是黑名單模式的話，port knocking就是白名單模式。服務端的SSH端口封閉，監聽部分特定端口。如果需要連接上伺服器，需要使用tcp udp或者icmp包進行 '敲打'。當符合一定的包特征和順序，服務端自動為當前IP開放指定端口。有很多相似的程式，在這裡可以找到。這裡提供一個knockd的配置範例。需要註意的是，這個方法需要一定的iptables知識。安裝部分發行版提供rpm。如果沒有(例如這台Debian8)，可以到這裡下載對應的包，然後用dpkg -i安裝。也需要iptables的安裝，上文提及過。配置下面提供我自己配置的方法iptables for test  Port  Usage  Policy  22  SSH  Accept  985  for SSH test  Drop  233  Listen(knockd)  Accept  2333  Listen(knockd)  Accept  23333  Listen(knockd)  AcceptKnockd配置測試首先為了防止誤操作導致無法連接，使用HAproxy，將985端口的請求轉發至22端口。默認的配置文件一般包括了兩個步驟 打開和關閉。這裡稍作修改，讓它可以自動關閉端口。已經建立的SSH連接不會因為iptables修改為DROP而被中斷。以下是配置文件，可以根據需求修改網卡(ovz一般是venet0，阿里雲似乎是eth1)，敲打端口的順序。國內骨幹網對出國的udp包似乎有特殊的嗜好，所以這裡全部使用tcp包進行認證。部分OpenVZ主機因為網卡問題，似乎無法正常監聽[options]    LogFile      = /var/log/knockd.log[opencloseSSH]    Interface    = eth0    sequence     = 233:tcp,2333:tcp,23333:tcp               seq_timeout = 5    command      = /sbin/iptables -A INPUT -s %IP% -p tcp --dport 985 -j ACCEPT    tcpflags     = syn    cmd_timeout  = 15    stop_command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 985 -j ACCEPT配置完成之後，輸入knockd -v -Dconfig: new section: 'options'config: log file: /var/log/knockd.logconfig: interface: eth0config: new section: 'opencloseSSH'config: opencloseSSH: sequence: 233:tcp,2333:tcp,23333:tcpconfig: opencloseSSH: seq_timeout: 5config: opencloseSSH: start_command: /sbin/iptables -A INPUT -s %IP% -p tcp --dport 985 -j ACCEPTconfig: tcp flag: SYNconfig: opencloseSSH: cmd_timeout: 15config: opencloseSSH: stop_command: /sbin/iptables -D INPUT -s %IP% -p tcp --dport 985 -j ACCEPTethernet interface detectedLocal IP: xx.xx.xx.xxlistening on eth0...表示正在監聽。接下來進行敲打測試。敲打測試如果是Linux，直接安裝knockd。Windows則下載http://www.zeroflux.org/proj/knock/files/knock-win32.zip，將Releases文件夾下的knock.exe放置在C:\\Windows下。然後透過命令knock -v xx.xx.xx.xx 233:tcp 2333:tcp 23333:tcphitting tcp xx.xx.xx.xx:233hitting tcp xx.xx.xx.xx:2333hitting tcp xx.xx.xx.xx:23333如果成功，剛才開啟的-D模式的窗口會打印opencloseSSH: running command: /sbin/iptables -I INPUT -s xx.xx.xx.xx -p tcp --dport 985 -j ACCEPT這時迅速連接上SSH即可。開啟服務測試成功後，就可以透過service knockd restartchkconfig knockd on開啟服務之後將knockd打開的端口指向22，設置22端口為DROP。使用時先敲打，後迅速透過xx.xx.xx.xx:22來訪問SSHiptables(Final)  Port  Usage  Policy  22  SSH  Drop  985  for SSH test  Drop  233  Listen(knockd)  Accept  2333  Listen(knockd)  Accept  23333  Listen(knockd)  Accept敲打之後  Port  Usage  Policy  22  SSH  Accept (temporarily)  985  for SSH test  Drop  233  Listen(knockd)  Accept  2333  Listen(knockd)  Accept  23333  Listen(knockd)  Accept突發情況處理如果knockd掛了怎麼辦？我們需要防范於未然可以透過cron定時重啟knockd，或者在SSH端口ACCEPT時iptables-save一下，一旦出錯reboot就好了參考資料使用 knock 管理防火牆 - 鳥哥的 Linux 私房菜                                   标签: SSH, security                            相关文章推荐                                                                    上一篇: Debian/CentOS chacha20依賴安裝            下一篇: Hello, Symfony                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.063 s.", "link": "https://touko.moe/blog/ssh-security", "title": "創建私人登入憑證 - 幾種安全的SSH驗證方式"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2016-08-26            分类: 日常            访问: 411 次                            Modafinil可以使人長期保持興奮狀態，其作用機理與咖啡因類似，與咖啡因共同使用可以互相增強效果。副作用目前看來較少，明顯的有口渴，心悸，亢奮，易怒。如果一次使用劑量小，副作用相對也會減少。心悸在使用後一段時間就會緩解。半衰期較長，12-15h，所以建議在清晨使用。可以稍微早一些起床，使用之後睡一個回籠覺。這樣心悸會好很多。初次可以從100mg開始試用，可以提前幾天少量使用觀察情況。可能出現耐藥性，因人而異。                                   标签: Modafinil                            相关文章推荐                                                                    上一篇: VMWare配置Debian8            下一篇: 關於EasyPass                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.034 s.", "link": "https://touko.moe/blog/about-Modafinil", "title": "Modafinil的使用建議"},
{"keywords": "相关文章推荐簡介生成密碼表取密碼文章搜索簡介生成密碼表取密碼文章分類簡介生成密碼表取密碼最新文章簡介生成密碼表取密碼歸檔簡介生成密碼表取密碼熱門標籤簡介生成密碼表取密碼關於我簡介生成密碼表取密碼關於部落格", "text": "作者: HoshinoTouko            时间: 2016-09-01            分类: Dev,php,web            访问: 506 次                            簡介很久以前有一個想法，只用一個密碼，通過hash的方式生成所有網站的密碼。具體是通過一個原密碼+一些任意字符串，生成不同的字符串結果。於是就寫了這個EasyPass，Demo在http://pw.nya.pm/下面記錄下自己實現的過程生成密碼表    function getEArray($hasNumber, $hasPunctuation){        // Array initialize        $eArray = [];        // Set the Punctuation's ASCII        $punc = [33, 35, 36, 37, 38, 43, 45, 46, 63, 64, 95, 126];        // Traversal all ASCII(10)        for($i=0; $i<=127; $i++){            // If hasNumber, push number to the array            if($hasNumber == \"true\"){                if($i>=48 and $i <= 57)                    array_push($eArray, chr($i));            }            // If hasPunctuation, push punctuation to the array            if($hasPunctuation == \"true\"){                if(in_array($i, $punc)){                    array_push($eArray, chr($i));                    array_push($eArray, chr($i));                }            }                        // Push letters to the array            if($i>=65 and $i <= 90)                array_push($eArray, chr($i));            if($i>=97 and $i <= 122)                array_push($eArray, chr($i));        }        // Get the password for encrypting        $encryptPass = __PASS__;        $encryptPassN = hash('sha512', base64_encode($encryptPass));        $i = 0;        $j = 0;        $arrayLength = sizeof($eArray);        while( isset($eArray[$i]) ){            $j = ($j+ord($encryptPassN[$i])) % $arrayLength;            $temp = $eArray[$i];            $eArray[$i] = $eArray[$j];            $eArray[$j] = $temp;            $i++;        }        return $eArray;    }這個函數帶兩個參數，分別決定是否含有數字和是否含有標點符號。函數先通過ASCII生成一張順序的密碼表，然後通過PASS這個常量（在Config.php中，可自定義）的base64編碼的SHA512值進行亂序。考慮到標點符號比較少，push兩次到array裏面。取密碼    function genPasswd($eArray, $newPass, $length){        // init output data        $result = \"\";        // Get the array's length        $arrayLength = sizeof($eArray);        // Set a pointer        $pointer = 0;        // Generate password words by words        for($i=0; $ifindWhere($newPass[$i]);            $pointer += $t;            // Get chars            $char = $eArray[$pointer % $arrayLength];            // Combine them            $result .= $char;        }        return $result;    }    function findWhere($char){        $t = ord($char);        if ($t >= 48 and $t <= 57){            return $t-47;        }        elseif ($t >= 97 and $t <= 122){            return $t-86;        }        else{            return $t%32;        }    }之後便是取密碼，包括了密碼表，原密碼，長度三個參數。通過一個pointer抓密碼表裏面的值，pointer遞增的值通過逐位取newPass的字符計算得出。最後增加至result內。                                   标签: php, EasyPass                            相关文章推荐                                            Windows下Xampp證書錯誤                                Hello, Symfony                                拒絕百度 - 使用反向代理訪問Google                                phpMyAdmin出現500錯誤問題及解決方案                                                        上一篇: Modafinil的使用建議            下一篇: RSA基礎知識                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.049 s.", "link": "https://touko.moe/blog/about-easypass", "title": "關於EasyPass"},
{"keywords": "相关文章推荐求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法文章搜索求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法文章分類求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法最新文章求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法歸檔求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法熱門標籤求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法關於我求最大公約數（Greatest Common Divisor）快速指數算法計算乘法逆元（解一次同餘式）偽素數的生成Miller-Rabin素性測試演算法關於部落格", "text": "作者: HoshinoTouko            时间: 2016-09-23            分类: Dev,Tech,web            访问: 358 次                            簡介RSA公開密鑰密碼體制於1978年提出，名字來源於提出者名字縮寫。這種密碼體制由數論構造，是迄今為止理論上最為成熟完善的密碼體制，安全性能目前看來依然良好，並且應用十分廣泛。密碼體制一般基於數學難題，RSA也不例外。RSA是基於大整數分解的難題。給定整數e和c，尋找滿足條件的m，使得c = m^e mod N。基礎知識RSA基於以下數論內容歐拉函數同餘擴展歐幾裡德算法一次同餘式及其求解費馬小定理（或歐拉定理）算法求最大公約數（Greatest Common Divisor）通過類輾轉相除法long int gcd(long int a, long int b){    if(b == 0)        return a;    return gcd(b, a % b);}快速指數算法由模運算性質[(a mod n) + (b mod n)] mod n = (a + b) mod n[(a mod n) × (b mod n)] mod n = (a × b) mod n可以簡化運算。例如求 3^19 mod 7= 3×3^18 mod 7= 3×(3^2)^9 mod 7= 3×(9 mod 7)^9 mod 7= 3×2^9 mod 7= 6×2^8 mod 7= 6×4^4 mod 7= 6×(16 mod 7)^2 mod 7...= 3long int fastModel(long int base, long int power, long int model){    long int temp = 1;    long int result = 0;    while(power != 1){        if(power % 2 == 0){            power /= 2;            base = base * base % model;        }        else if(power % 2 != 0){            power -= 1;            temp = temp * base % model;        }    }    result = temp * base % model;    if (result <= 0){        result += model;    }    return (long int)result;}計算乘法逆元（解一次同餘式）已知a，n，ax ≡ 1 (mod n)，求x。①定義X1，X2，X3，Y1，Y2，Y3。令（X1，X2，X3）=（1，0，n）；（Y1，Y2，Y3）=（0，1，a）。②令Q = X3/Y3（不留小數點）③令（T1，T2，T3）=（X1-Q×Y1，X2-Q×Y2，X3-Q×Y3）；（X1，X2，X3）=（Y1，Y2，Y3）；（Y1，Y2，Y3）=（T1，T2，T3）④迴圈這一步，直到Y3 = 1或0。如果為0，則無解；如果為1，則解為Y2。long int getOpposite(long int a, long int n){    long int Q, X1, X2, X3, Y1, Y2, Y3, T1, T2, T3;    X1=1;X2=0;X3=n;Y1=0;Y2=1;Y3=a;    while(Y3 != 0 and Y3 != 1){        Q = X3/Y3;        T1 = X1 - Q * Y1;        T2 = X2 - Q * Y2;        T3 = X3 - Q * Y3;        X1 = Y1; X2 = Y2; X3 = Y3;        Y1 = T1; Y2 = T2; Y3 = T3;    }    if (Y3 == 1){        if (Y2 < 0){            return n + Y2;        }        else{            return Y2;        }    }    else{        return 0;    }}偽素數的生成RSA加密需要生成大素數作為初始的n的來源。我們不可能用每個數字進行素數判斷。由費馬小定理可知，a^(p - 1) ≡ 1 (mod p)。如果一個數為素數，那麼它一定滿足這個條件。這是一個數為素數的必要條件但非充分條件。但是，如果先用這種方法將其他無用的數排除，將縮短尋找大素數消耗的時間。我們將a設為2進行搜索。long int ranFakePrime(){    long int t;    srand(unsigned(time(0)));    do{        t = random(10, 233);    }    while( fastModel(2, t-1, t) != 1 );    return t;}double random(double start, double end){    return start+(end-start)*rand()/(RAND_MAX + 1.0);}Miller-Rabin素性測試演算法生成偽素數之後，下一步就是判斷這個素數是否為真實的素數。畢竟如果只令a = 2，前10億個自然數中共有50847534個素數，而滿足2^(n-1) mod n = 1的合數n有5597個。這樣算法出錯概率有0.011%。如果令a = 3呢？前10億個自然數中同時以2和3為底的偽素數只有1272個，這個數目不到剛才的1/4。雖然可以再次排除一些偽素數，但結果有些不盡人意。這是Fermat素性測試，原理是隨機選擇若干個小於待測數的正整數作為a進行若干次測試，只要有一次沒有通過測試就立即把這個將這個數標記為合數。但是仍然存在十分頑強的合數，可以繞過這種檢查方式，被稱作Carmichael數。例如最小的這個數，只有561。這時候就需要Miller-Rabin素性測試算法。該算法詳細介紹見https://zh.wikipedia.org/wiki/%E7%B1%B3%E5%8B%92-%E6%8B%89%E5%AE%BE%E6%A3%80%E9%AA%8Cbool isPrime(long int t){    long int r = 0;    long int d = t-1;    if(t%2 == 0 and t != 2){        return false;    }    else if(t == 2){        return true;    }     else{        do{            r++;            d /= 2;            if (fastModel(2, d, t) != 1){               if (fastModel(2, d, t) != t-1){                   return false;               }               else{                   return true;               }            }         }        while( d % 2 == 0 );    }    return true;}                                   标签: RSA                            相关文章推荐                                            RSA原理和實踐                                                        上一篇: 關於EasyPass            下一篇: RSA原理和實踐                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.044 s.", "link": "https://touko.moe/blog/rsa-knowledge-base", "title": "RSA基礎知識"},
{"keywords": "能拿来干啥？网易牛逼啊，这都不加密相关文章推荐网易牛逼啊，这都不加密文章搜索网易牛逼啊，这都不加密文章分類网易牛逼啊，这都不加密最新文章网易牛逼啊，这都不加密歸檔网易牛逼啊，这都不加密熱門標籤网易牛逼啊，这都不加密關於我网易牛逼啊，这都不加密關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-21            分类: Dev,Tech            访问: 2,417 次                              這個接口已經被封鎖偶然发现的一个有趣的接口http://msg.mail.163.com/cgi/mc?funcid=getusrnewmsgcnt&fid=1&addSubFdrs=1&language=0&style=0&template=newmsgres_setcookie.htm&df=ydweb&callback=&username=admin@163.com  例如你是nizhizhangma@126.com，只要修改username参数，再把请求的地址改成msg.mail.126.com就行了。yeah#net同理获取的json数据第一个是未读邮件数，第二个是已读邮件数。。。网易牛逼啊，这都不加密能拿来干啥？跟别人装逼呗(手动滑稽                                   标签: Netease, 163mail                            相关文章推荐                                                                    上一篇: 我和typecho的第一次(            下一篇: 基於銳速的shadowsocks簡易優化                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.025 s.", "link": "https://touko.moe/blog/netease-mail-inbox", "title": "获取网易邮箱收件箱数量"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-27            分类: Linux,Dev            访问: 1,847 次                              锐速是一款优秀的服务器TCP加速软件，可以与shadowsocks配合使用。下面是简单的配置方法进入锐速的官网 http://www.serverspeeder.com锐速现在免费提供20Mbps&3000加速连接的免费服务注册之后，远程下载锐速的安装程序并运行wget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gztar -zvxf serverSpeederInstaller.tar.gzbash serverSpeederInstaller.sh根据提示一路回车即可。安装完成后进行一些配置vi /serverspeeder/etc/config修改其中对应的内容maxmode=\"1\"  rsc=\"1\"  advinacc=\"1\"  之后重启服务service serverSpeeder restart#or/serverspeeder/bin/serverSpeeder.sh restart如果需要进一步优化，可以升级Linux内核后开始TCP Fast Open (TFO)。需要3.7以上的Linux内核                                   标签: shadowsocks, serverSpeeder                            相关文章推荐                                            使用Vnet中转加速TCP/UDP流量                                端口轉發和haproxy和Proxy/ss優化與負載均衡                                CentOS配置Shadowsocks Manyuser + ss-panel                                                        上一篇: 获取网易邮箱收件箱数量            下一篇: 關於nyan.work                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.058 s.", "link": "https://touko.moe/blog/serverspeeder-shadowsocks", "title": "基於銳速的shadowsocks簡易優化"},
{"keywords": "上面的接口能做什麼呢？漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？它也許是廣告，也許包含了惡意鏈接。這一切您都不會知道。漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？相关文章推荐漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？文章搜索漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？文章分類漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？最新文章漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？歸檔漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？熱門標籤漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？關於我漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法危害？關於部落格", "text": "作者: HoshinoTouko            时间: 2015-11-07            分类: Dev,Tech,web            访问: 756 次                              信息最初從新浪微博@ringzero 傳播開  強烈譴責這位仁兄！為何要發送 '我是一隻豬' 啊魂淡！((漏洞已經被封上啦！新浪這次反應速度挺快的嘛接口調用方法http://supports.jiaju.sina.com.cn/api/weibo.php?action=send&type=1&content=你需要的文字信息&callback=jsonp1446827400881  這或許只是其中的一小個接口。也許背後還有不計其數新浪遺留下來的漏洞。上面的接口能做什麼呢？從已登陸賬號的新浪微博手機客戶端 或者擁有sina.com.cn cookie記錄的瀏覽器 中打開這個網站，就會返回一系列賬號信息並且 自動發送一條由網址自定義的微博例如我在手機客戶端中打開http://supports.jiaju.sina.com.cn/api/weibo.php?action=send&type=1&content=TEST &callback=jsonp1446827400881  我就會自動發送一條小尾巴來自新浪房產的微博 TEST 。危害？我隨手寫了一個網址並用一些技巧讓他能把自己傳播出去。是 '屠龍寶刀點擊就送' 的信息，並且最後會@我。結果是我在短時間內收到了50條的@假設我現在用iframe或者其他手段把它嵌套進一個看起來正常的網頁裡面，並且將iframe的長寬設置為0，會發生什麼情況呢？您會在不知道任何信息的情況下發送一條由我定義的微博。它也許是廣告，也許包含了惡意鏈接。這一切您都不會知道。我簡單寫了一個這樣的網頁。它的網址是http://demo.touko.moe/sinaapi/可以直接訪問 這條微博 點擊測試鏈接或者複製到手機私信或者已經在sina.com.cn登陸過的瀏覽器中打開它。然後您就會發送一條 Test 微博。                                   标签: Sina, Weibo, Bug, api                            相关文章推荐                                                                    上一篇: 關於nyan.work            下一篇: 再見，我的競賽生涯                                     Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.110 s.", "link": "https://touko.moe/blog/sinaapi-bug", "title": "關於新浪微博的一個遺留下來的接口"},
{"keywords": "雜項開發筆記urldecode / urlencode開發筆記MySQL主鍵開發筆記短鏈的演算法開發筆記相关文章推荐開發筆記文章搜索開發筆記文章分類開發筆記最新文章開發筆記歸檔開發筆記熱門標籤開發筆記關於我開發筆記關於部落格", "text": "作者: HoshinoTouko            时间: 2015-11-01            分类: Dev,php            访问: 606 次                              某日突發奇想，寫了這麼一個東西  用來縮短鏈接。  雖說這個功能變數名稱看起來已經很長了。這篇博客地址 http://nyan.work/rLBzv主站地址 http://nyan.work/m5813託管在Hostker http://nyan.work/dGdy43還有很多東西沒寫。以後再說吧開發筆記雜項畢竟人老了，經常犯錯。在Hostker新建主機後忘記寫解析，只給給存放URL的表開了30個長度什麼的蠢事都幹的出來。找個時間考慮一下搜索的算法吧。總不可能每次都從MySQL裡面fetch來一個個判斷數據吧……效率也太低了urldecode / urlencode我不知道到底要不要加上這麼個東西。如果沒加上說不定在導入SQL的時候容錯率會降低。不過加上了沒有影響，就加上吧。20151102更新後來發現這東西是必須的。假設傳入的URL中包含了&等字元，在GET時會自動用URL編碼。如果沒有一個解碼的過程，網址將出錯MySQL主鍵MySQL中新建了一大堆表，如果沒有添加主鍵，會引發很奇怪的問題 : 使用什麼許可權的使用者都無法修改資料。解決方法只有全刪了重新新建，然後在導入資料之前立刻加上主鍵。短鏈的演算法我嘗試了很多種算法，比如md5 的32 16位元加密算法，base64的算法，看起來都不是很好看。遂找了一個算法。0){        $s=$x % 62;        if ($s>35){            $s=chr($s+61);        }elseif($s>9&&$s<=35){            $s=chr($s+55);        }        $show.=$s;        $x=floor($x/62);    }    return $show;}function shorturl($url){    $url=crc32($url);    $result=sprintf(\"%u\",$url);    return code62($result);}?>這個函數能夠把URL縮短，包含了大小寫和數字。資料量大概是10 ^8以上的級別，作為個人使用的短鏈肯定夠用了。                                   标签: nyan.work                            相关文章推荐                                                                    上一篇: 基於銳速的shadowsocks簡易優化            下一篇: 關於新浪微博的一個遺留下來的接口                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.094 s.", "link": "https://touko.moe/blog/nyan-work", "title": "關於nyan.work"},
{"keywords": "相关文章推荐是不是要反思一下呢外出培訓寫在最後文章搜索是不是要反思一下呢外出培訓寫在最後文章分類是不是要反思一下呢外出培訓寫在最後最新文章是不是要反思一下呢外出培訓寫在最後歸檔是不是要反思一下呢外出培訓寫在最後熱門標籤是不是要反思一下呢外出培訓寫在最後關於我是不是要反思一下呢外出培訓寫在最後關於部落格", "text": "作者: HoshinoTouko            时间: 2015-11-07            分类: 日常            访问: 830 次                            從今年七月開始，我就全身心投入了學科競賽。到九月走進考場我才發覺，時間過得真是太快了。從13年五月進入這個班級開始，我第一次了解到了學科競賽。之後我選擇了物理競賽，順帶輔修數學。學習競賽是一個充滿挑戰 讓人興奮的過程。它是如此有趣，以至於我能放棄主課去學習它們。雖然結果不盡人意，只有兩個省二等獎。或許有運氣的成分，但更多的是自己實力不足和准備不充分。是不是要反思一下呢我花了將近半個學期的課餘時間來學習電學，特別是場。電場將數學和物理結合在一起，學起來特別有趣。雖說難度很大，但是正合我的口味。我現在依然記得電介質的邊界效應一類內容。  之後才發覺似乎複賽對這方面要求不高，然而我的時間都花在非重點內容上。不少另外的內容也是這樣，比如多普勒效應和波動光學，我只有基礎，當然無法完成複賽題。因為廣義相對論100週年，我大量準備的相對論內容最後也被證明沒有什麼用處。似乎都沒有正中目標呢，不過這有什麼關係呢？外出培訓我去過四次培訓，一次去福州大學學習了物理，兩次去杭州師範大學分別學習了數學與物理，還有一次去廣州聽了舒教授講課 (舒教授的課真的非常好啊)這也是我人生中第一次一個人在外奔波，我也愛上了杭州這座城。數學培訓結束的早上我坐高鐵從杭州趕往廣州，現在想想自己當時真是厲害呢寫在最後競賽結束了，接下來就是安心準備高考了再見，數學 物理競賽再見，經典物理  相對論  量子力學  弦論再見，拉格朗日  切比雪夫還有無數我鐘愛的方程組和定理們或許未來的某一天，我還會與你們相遇。那時候，我將以一個全新的自己來面對你們。謝謝你們這兩年的陪伴                                   标签: Physics, Maths, Life                            相关文章推荐                                                                    上一篇: 關於新浪微博的一個遺留下來的接口            下一篇: 端口轉發和haproxy和Proxy/ss優化與負載均衡                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.066 s.", "link": "https://touko.moe/blog/deep-in-physics-and-maths", "title": "再見，我的競賽生涯  "},
{"keywords": "iptables轉發數據包負載均衡haproxy轉發數據包負載均衡相关文章推荐轉發數據包負載均衡文章搜索轉發數據包負載均衡文章分類轉發數據包負載均衡最新文章轉發數據包負載均衡歸檔轉發數據包負載均衡熱門標籤轉發數據包負載均衡關於我轉發數據包負載均衡關於部落格", "text": "作者: HoshinoTouko            时间: 2015-11-09            分类: Linux,Dev,web            访问: 4,790 次                            稍微借鑒了一下輕小說的標題明明方式 ; )前些日子，電信直連GMO(ConoHa)機房出現了繞路美利堅的情況。跟蹤路由記錄表明，數據包一旦到達電信骨幹網，便被直接往阿妹你看扔，從美國NTT繞一圈回日本。f**k電信！苦苦思索應該怎麼辦。想起前些日子購買了香港Softlayer機房的vps，電信ping這個機房的延時只有50以下，廣東等東南部ping甚至低至10ms從Softlayer ping GMO的延時穩定在50左右。那麼正好可以拿它當做一個跳板，從香港中轉去日本。我不得不吐槽一下。中國大陸和日本直線距離只有多少，非得從香港繞一圈...找了一些資料，想起自己見過clowwindy在ss的wiki裡面留下的方法。一下的東西摘自ss wiki的Setup a Shadowsocks relay裡轉發數據包  If you want your client connected to a Japan VPS, but you want a US IP.Client <--> Japan VPS <--> US VPSiptables  Easy version:  Setup Shadowsocks server as usual on US VPS.  On Japan VPS, enable forwarding. Replace US_VPS_IP and JAPAN_VPS_IP with actual IP:sudo suecho 1 > /proc/sys/net/ipv4/ip_forwardiptables -t nat -A PREROUTING -p tcp --dport 8388 -j DNAT --to-destination US_VPS_IP:8388iptables -t nat -A POSTROUTING -p tcp -d US_VPS_IP --dport 8388 -j SNAT --to-source JAPAN_VPS_IP  Set your server to JAPAN_VPS_IP:8388 on your client.可以用Linux自帶的防火墻iptables進行數據包的中轉。haproxy  Better version:  For those who want more control and better performance, use haproxy instead. You can also enable load balance by adding multiple servers.蛤proxy是什麼？下面這段話摘自百度百科  HAProxy提供高可用性、负载均衡以及基于TCP和HTTP应用的代理，支持虚拟主机，它是免费、快速并且可靠的一种解决方案。HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。  HAProxy实现了一种事件驱动, 单一进程模型，此模型支持非常大的并发连接数。多进程或多线程模型受内存限制 、系统调度器限制以及无处不在的锁限制，很少能处理数千并发连接。事件驱动模型因为在有更好的资源和时间管理的用户空间(User-Space) 实现所有这些任务，所以没有这些问题。此模型的弊端是，在多核系统上，这些程序通常扩展性较差。这就是为什么他们必须进行优化以 使每个CPU时间片(Cycle)做更多的工作。以我現在的知識水平，只能對其原理略懂一二。但我們只需要知道它高效並且方便就行了。來看看它的配置方法安裝haproxy他有官方的rpm包，只需要yum install haproxy#orapt-get install haproxy即可。配置haproxyhaproxy的默認配置文件一般來說是/etc/haproxy/haproxy.cfg配置完成之後，運行命令service haproxy start  即可啟動程序或者可以使用haproxy -f **yourCfgName**  來實現啟動特定配置文件配置文件範例以下配置文件來自clowwindyglobal        ulimit-n  51200defaults        log global        mode    tcp        option  dontlognull        contimeout 1000        clitimeout 150000        srvtimeout 150000        #上面這一塊內容即將失效，需要更換為        #timeout connect 1000        #timeout client  150000        #timeout server 150000frontend ss-in        bind *:8388        default_backend ss-outbackend ss-out        server server1 US_VPS_IP:8388 maxconn 20480配置文件詳解它包括了四個區塊內容，這裡只使用了三塊內容global  default  frontend & backend  以下修改自http://www.linuxidc.com/wap.aspx?nid=118968global：  全局配置段default： 默認配置    所有在backend、frontend、linsten裡面相同的內容可以定義在這裡frontend：前端配置    定義前端配置，接受客戶端請求backend： 后端配置    定义后端分配的規則，與後端服務器交互listen：  绑定配置    直接将指定的客户端与后端特定服务器绑定到一起它在manyuser下的應用shadowsocks-manyuser往往有大量用戶，需要監聽大量的端口用於轉發。我寫了一個python腳本來輸出這個配置文件。托管於Github__author__ = 'touko'# -*- coding: utf-8 -*-#!/usr/bin/pythondef blockFunc( portNumber1, portNumber2, domainName ):    portNumber1 = str(portNumber1)    portNumber2 = str(portNumber2)    listAdd('frontend ss-in-' +portNumber1)    listAdd('        bind *:' +portNumber1)    listAdd('        default_backend ss-out-' +portNumber1)    listAdd('backend ss-out-' +portNumber1)    listAdd('        server server1 ' +domainName+ ':' +portNumber2+ ' maxconn 20480')    listAdd(' ')    #return sStrdef listAdd( sStr ):    blockList.append(sStr)    return sStr#valuesblockList = []targetDomainName = raw_input(\"Enter your target domain: \")listenPortStart = raw_input(\"Enter your first listening port: \")forwardPortStart = raw_input(\"Enter your first forwarding port: \")numbers = raw_input(\"Enter your port numbers: \")#values enddefaultStr = '''global        ulimit-n  51200defaults        log global        mode    tcp        option  dontlognull        timeout connect 1000        timeout client  150000        timeout server 150000        '''listAdd(defaultStr)for i in range(0, int(numbers) ):    blockFunc( int(listenPortStart) + i, int(forwardPortStart) + i, targetDomainName )outputStr = '\\n'.join(blockList)print outputStroutputFileName = raw_input(\"save file name [default : haproxy.cfg]: \")if outputFileName == '' :    outputFileName = 'haproxy.cfg'fi = open( outputFileName, 'w')fi.write( outputStr )fi.close( )負載均衡haproxy本應該是個負載均衡的軟件，僅僅拿來拿來做轉發數據包，是否顯得大材小用了？我閱讀了官方文檔，發現可以給backend添加多個服務器。在服務器後面加上相同的weight『權重』即可。像這樣server server1 US_VPS_IP1:8388 maxconn 20480 weight 3server server2 US_VPS_IP2:8388 maxconn 20480 weight 3這樣就是一個可以轉發數據包又能實現負載均衡的代理啦。不僅如此，還可以方便的控制用戶連接設備的數量~                                   标签: shadowsocks, manyuser, haproxy, transfer, proxy                            相关文章推荐                                            使用Vnet中转加速TCP/UDP流量                                在樹莓派上使用MEOW（COW）代理局域網設備分流穿墻                                基於銳速的shadowsocks簡易優化                                CentOS配置Shadowsocks Manyuser + ss-panel                                                        上一篇: 再見，我的競賽生涯              下一篇: 使用.htaccess給網站加上訪問權限控制                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.067 s.", "link": "https://touko.moe/blog/haproxy-ss", "title": "端口轉發和haproxy和Proxy/ss優化與負載均衡"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2015-11-10            分类: Linux,Dev,web            访问: 851 次                            當我使用pma的時候，很擔心哪天又跑了個漏洞出來然後出現各種蜜汁問題。所以我想給它加上一個身份驗證我是用的是Apache。Apache自帶了身份驗證的功能。來看看官方給出的支持。htpasswd  Usage:          htpasswd [-cmdpsD] passwordfile username          htpasswd -b[cmdpsD] passwordfile username password          htpasswd -n[mdps] username          htpasswd -nb[mdps] username password   -c  Create a new file.   -n  Don't update file; display results on stdout.   -m  Force MD5 encryption of the password.   -d  Force CRYPT encryption of the password (default).   -p  Do not encrypt the password (plaintext).   -s  Force SHA encryption of the password.   -b  Use the password from the command line rather than prompting for it.   -D  Delete the specified user.  On Windows, NetWare and TPF systems the '-m' flag is used by default.  On all other systems, the '-p' flag will probably not work.首先需要開啟.htaccess的支持。之後在任意文件夾『當然最好是外部無法訪問到的』創建密碼文件。touch /path/to/your/file/passwd.txthtpasswd -bc /path/to/your/file/passwd.txt User Pass之後在.htaccess文件裡這麼寫AuthName \"Need Login\"AuthType basicAuthUserFile /path/to/your/file/passwd.txtrequire valid-user保存退出则OK了。這樣以後訪問網站就會進行身份驗證。如果驗證不通過，則返回401錯誤                                   标签: httpd, password, Apache, Authentication                            相关文章推荐                                                                    上一篇: 端口轉發和haproxy和Proxy/ss優化與負載均衡            下一篇: 在VPS上快速部署Whmcs＋Vesta售賣PHP虛擬主機                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.043 s.", "link": "https://touko.moe/blog/htaccess-passwd", "title": "使用.htaccess給網站加上訪問權限控制"},
{"keywords": "第一次嘗試我的嘗試過程如何快速部署？參考資料第二次嘗試我的嘗試過程如何快速部署？參考資料第三次嘗試我的嘗試過程如何快速部署？參考資料Step 1 install Vesta我的嘗試過程如何快速部署？參考資料Step 2 install ionCube我的嘗試過程如何快速部署？參考資料Step 3 install & setup whmcs我的嘗試過程如何快速部署？參考資料Step 4 connect whmcs & vesta我的嘗試過程如何快速部署？參考資料相关文章推荐我的嘗試過程如何快速部署？參考資料文章搜索我的嘗試過程如何快速部署？參考資料文章分類我的嘗試過程如何快速部署？參考資料最新文章我的嘗試過程如何快速部署？參考資料歸檔我的嘗試過程如何快速部署？參考資料熱門標籤我的嘗試過程如何快速部署？參考資料關於我我的嘗試過程如何快速部署？參考資料關於部落格", "text": "作者: HoshinoTouko            时间: 2015-11-20            分类: Linux,Dev,php            访问: 1,551 次                              前些日子，收到了一臺Linode日本東京的伺服器。雖説是最低配置，但是對我的服務來説還是綽綽有餘。  於是便考慮在上面搭建虛擬主機分銷  我用過兩個面板，一個是DirectAdmin，還有一個是Vesta。個人比較喜歡Vesta，而且它是免費的。我的嘗試過程第一次嘗試一開始，我直接使用lnmp.org提供的一鍵安裝包安裝了LNMPA，順便安裝了ionCube。問題便出現了。我安裝的是PHP5.6 ＋ MySQL5.6 。或許是版本太高的原因，MySQL默認開啓了嚴格模式。之後報錯My SQL Error 1048 column description cannot be nullIncorrect integer value: ” for column ‘id’ at row 1Field ‘xyz’ doesn’t have a default value參考了 https://www.webhostingdiscussion.net/blog/mysql/disable-mysql-strict-mode.htm 提供的解決方案，發現并不能成功。直接使用lnmp一鍵安裝包的更換MySQL版本，但是由於MySQL進程沒有清理乾净也失敗了。遂重裝系統第二次嘗試第二次我直接安裝MySQL5.5.44 。問題解決。lnmp自帶ionCube擴展的快速安裝方法，一切進展順利。whmcs配置完成之後，開始安裝Vesta。安裝過程也是一切正常，但是在安裝完成之後，發現Nginx服務無法重新啓動。檢查了一下，發現Vesta的Nginx似乎是自己獨有的，與服務器現存的Nginx不能兼容。無奈，卸載了Vesta和lnmp一鍵安裝包。第三次嘗試這次我直接安裝Vesta。因爲Vesta的安裝脚本自帶了運行服務器所需要的所有軟件，甚至還自帶iptables和Fail2ban幾分鐘后安裝完成，安裝了ionCube，在後臺開虛擬主機跑whmcs，配置數據庫＋插件＋前後端對接。整個過程完成，耗時大約20分鐘。如何快速部署？Step 1 install Vesta支持的系統：#    Supported Operating Systems: #    RHEL / CentOS 5,6,7 #    Debian 6,7,8 #    Ubuntu 12.04-15.10安裝：# Download installation scriptcurl -O http://vestacp.com/pub/vst-install.sh# Run itbash vst-install.sh進行一番配置，安裝過程非常快。配置稍差的主機大概衹需要20分鐘。Step 2 install ionCube前往 http://www.ioncube.com/loaders.php 查看支持的系統和對應的包我是CentOS7，所以：wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gztar zxf ioncube_loaders_lin_x86-64.tar.gzmv ioncube /usr/local#修改PHP配置文件vi /etc/php.ini 在[Zend]之前加入（我直接加在文件頭部）zend_extension = /usr/local/ioncube/ioncube_loader_lin_5.4.so zend_extension_ts = /usr/local/ioncube/ioncube_loader_lin_5.4_ts.so之後#重啓Apacheservice httpd restart#查看是否安裝成功php -vStep 3 install & setup whmcs請支持正版Step 4 connect whmcs & vestaVesta在Vesta面板中，添加package(包)對應各套餐注意httpd和nginx選擇『hosting』whmcs#進入whmcs根目錄  cd /home/admin/web/public_html/modules/serversmkdir vestacd vesta#下載插件wget http://c.vestacp.com/0.9.8/rhel/whmcs-module.php -O vesta.php之後進入whmcs的後台，添加服務器。模板選擇Vesta，填入自己的Vesta登錄信息即可。參考資料Vesta官網 : http://vestacp.comfreehao123 : http://www.freehao123.com/vestacp-whmcs/                                   标签: php, vesta, whmcs, hosting, IDC                            相关文章推荐                                            關於EasyPass                                Windows下Xampp證書錯誤                                Hello, Symfony                                拒絕百度 - 使用反向代理訪問Google                                                        上一篇: 使用.htaccess給網站加上訪問權限控制            下一篇: 在樹莓派上使用MEOW（COW）代理局域網設備分流穿墻                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.062 s.", "link": "https://touko.moe/blog/whmcs-and-vesta", "title": "在VPS上快速部署Whmcs＋Vesta售賣PHP虛擬主機"},
{"keywords": "COW (Climb Over the Wall) proxy想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程Features想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程因爲移動特製的墻，無法下載文件！想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程相关文章推荐想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程文章搜索想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程文章分類想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程最新文章想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程歸檔想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程熱門標籤想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程關於我想法不是那麽準確的示意圖COW和MEOW簡介安裝方法安裝過程中遇到的問題和解決方法配置教程關於部落格", "text": "作者: HoshinoTouko            时间: 2015-12-05            分类: Linux,Dev,web            访问: 2,019 次                            想法更新了Android5.1，我的機子出現了奇怪的問題。挂著的ss經常會被清理後臺給切斷。如果用fqrouter，效率也很低下。便想著在Raspberry上面部署一個客戶端，用來轉發數據包。恰好就發現了COW和MEOW。不是那麽準確的示意圖COW和MEOW簡介COWMEOWCOW (Climb Over the Wall) proxyCOW is a HTTP proxy to simplify bypassing the great firewall. It tries to automatically identify blocked websites and only use parent proxy for those sites.FeaturesAs a HTTP proxy, can be used by mobile devicesSupports HTTP, SOCKS5, shadowsocks and COW itself as parent proxySupports simple load balancing between multiple parent proxiesAutomatically identify blocked websites, only use parent proxy for those sitesGenerate and serve PAC file for browser to bypass COW for best performanceContain domains that can be directly accessed (recorded accoring to your visit history)然而作者已經六個月沒有提交新的commit了，不禁讓人與clowwindy的事件關聯起來另一位fork了一份代碼并且獨立開發了一個新的分支MEOW，在運行方式上做了一些改動，使用了“Whitelist mode”       /\\   )  ( ')     MEOW 是 [COW](https://github.com/cyfdecyf/cow) 的一个派生版本  (  /  )      MEOW 与 COW 最大的不同之处在于，COW 采用黑名单模式， 而 MEOW 采用白名单模式   \\(__)|      国内网站直接连接，其他的网站使用代理连接安裝方法OS X, Linux: 执行以下命令（也可用于更新）curl -L git.io/meowproxy | bash环境变量 MEOW_INSTALLDIR 可以指定安装的路径，若该环境变量不是目录则询问用户Windows: 下载地址从源码安装: 安装 Go，然后 go get github.com/renzhn/MEOW以上來自README.md安裝過程中遇到的問題和解決方法因爲移動特製的墻，無法下載文件！報錯信息：curl: (35) Unknown SSL protocol error in connection to raw.githubusercontent.com:443這個問題一開始很讓我頭疼。後來我在遠程的服務器部署了另一個http代理。sudo vi /etc/profile添加http_proxy=\"http://username:passwd@remoteServer:port\"export http_proxy更新環境變量source /etc/profile之後，用curl ip.cn查看ip地址，發現代理成功。然後用樹莓派連接上去。結果發現還是存在這個問題。原來curl并不會通過系統全局http代理訪問。需要在curl同時增加參數。先將安裝脚本拷貝下來curl git.io/meowproxy -O install.shvi install.sh替換裏面的所有curl爲curl -x remoteServer:port就能夠正確安裝了。配置教程配置教程詳見 https://github.com/renzhn/MEOW/blob/master/README.md這裏就不浪費版面了。                                   标签: proxy, MEOW, COW                            相关文章推荐                                            端口轉發和haproxy和Proxy/ss優化與負載均衡                                                        上一篇: 在VPS上快速部署Whmcs＋Vesta售賣PHP虛擬主機            下一篇: Linux簡易配置Let's Encrypt證書及其在Anyconnect中的使用方法                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.048 s.", "link": "https://touko.moe/blog/meow-rasp", "title": "在樹莓派上使用MEOW（COW）代理局域網設備分流穿墻"},
{"keywords": "目前Vnet的服務有什麼時候需要用我們需要的服務價格vxTrans什麼時候需要用我們需要的服務價格相关文章推荐什麼時候需要用我們需要的服務價格文章搜索什麼時候需要用我們需要的服務價格文章分類什麼時候需要用我們需要的服務價格最新文章什麼時候需要用我們需要的服務價格歸檔什麼時候需要用我們需要的服務價格熱門標籤什麼時候需要用我們需要的服務價格關於我什麼時候需要用我們需要的服務價格關於部落格", "text": "作者: HoshinoTouko            时间: 2016-01-15            分类: Dev,Tech            访问: 4,302 次                              Vnet是一個充滿黑科技的雲服務提供商。我們可以用它中轉加速SSH，FTP等協議的傳輸，甚至可以加速shadowsocks什麼時候需要用訪問國外的vps或者虛擬主機的時候丟包嚴重或者延遲高，或者作為shadowsocks的國內中轉節點。目前Vnet的服務有OneNet(國外翻進來)  vxDNS  DB Service  vDog(服務器監視)  vxTrans(轉發數據包)  vxGG(加速遊戲)  我們需要的服務vxTransvxTrans國內有CN2和阿里雲兩個入口，國外有日本KDDI和新加坡GMO節點。最近又上線了香港和新加坡阿里雲，都可以試試首先註冊一個賬號。如果您願意的話，通過我的邀請鏈接註冊，可以獲得5G的流量。之後我們去後台開啓vxTrans。充值1元的永久點券，這樣可以獲得200M＋5G流量。去vxTrans後台，創建一個連接點。目標端口什麼的根據網頁提示寫，一段時間過後就會自動開通線路。之後連接目標服務器的時候，填寫vnet提供的地址和端口就可以了。目標服務器將轉發所有的TCP/UDP包。包括但不限於SSH SFTP FTP Shadowsocks效果還算不錯，可以有效降低丟包率價格如果是按月結算，最低是15元，最低換算1元/G，按年結算則稍貴。如果是永久點券則全部都是5元/G。這個價格還是可以接受的。                                   标签: shadowsocks, Vnet, 中转服务器, vxtrans                            相关文章推荐                                            端口轉發和haproxy和Proxy/ss優化與負載均衡                                基於銳速的shadowsocks簡易優化                                CentOS配置Shadowsocks Manyuser + ss-panel                                                        上一篇: Linux簡易配置Let's Encrypt證書及其在Anyconnect中的使用方法            下一篇: phpMyAdmin出現500錯誤問題及解決方案                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.147 s.", "link": "https://touko.moe/blog/vnet-vxtrans", "title": "使用Vnet中转加速TCP/UDP流量"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2016-02-13            分类: Dev,php            访问: 751 次                            友人部落格搬遷，恢復文件的時候使用pma發生如下問題。打開table報錯500  導入sql語句正常  查找了一下，發現是php設置存在問題。打開php.ini文件，找到如下語句並修改(vim可用 /words+{enter})session.save_path = '/tmp'重啟php或者php-fpm。遂解決。另:SoftLayer香港到國內的線路越來越差勁了。考慮更換機房                                   标签: Linux, php, phpMyAdmin                            相关文章推荐                                            關於EasyPass                                VMWare配置Debian8                                Windows下Xampp證書錯誤                                Hello, Symfony                                                        上一篇: 使用Vnet中转加速TCP/UDP流量            下一篇: 個人使用過的伺服器/Hosting等匯總與簡評                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.119 s.", "link": "https://touko.moe/blog/pma-500error", "title": "phpMyAdmin出現500錯誤問題及解決方案"},
{"keywords": "必須確保example.com的IP地址解析到當前服務器在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect相关文章推荐在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect文章搜索在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect文章分類在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect最新文章在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect歸檔在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect熱門標籤在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect關於我在綫申請Let's Encrypt的前期準備生成證書自動更新Anyconnect關於部落格", "text": "作者: HoshinoTouko            时间: 2015-12-27            分类: Linux,Dev,web            访问: 2,784 次                            Let's Encrypt開放使用之後一片火熱。其提供的證書申請方便，并且受到各大主流平臺支持。在綫申請Let's Encrypt的前期準備clone一份由Let's Encrypt官方發佈的申請程序到/opt/letsencryptgit clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt生成證書必須確保example.com的IP地址解析到當前服務器cd /opt/letsencrypt./letsencrypt-auto certonly -d example.com之後程序會進行環境準備，準備完成后彈出一個對話框，要求輸入郵箱，用於找回丟失的Key等中途如果由於DNS問題出現Failed authorization procedure. example.com (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client to verify the domain :: DNS query timed out等錯誤，重試幾次或者更換域名的Nameserver就行自動更新apt-get install croncrontab -e添加0 0 1 * * /opt/letsencrypt/letsencrypt-auto certonly --renew-by-default -d example.comAnyconnectDebian7+ Anyconnect脚本安裝完成之後，編輯Anyconnect的配置文件vi /etc/ocserv/ocserv.conf找到server-cert = /etc/letsencrypt/live/example.com/fullchain.pemserver-key = /etc/letsencrypt/live/example.com/privkey.pem然後service ocserv restart檢查一下service ocserv status                                   标签: none                            相关文章推荐                                                                    上一篇: 在樹莓派上使用MEOW（COW）代理局域網設備分流穿墻            下一篇: 使用Vnet中转加速TCP/UDP流量                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.059 s.", "link": "https://touko.moe/blog/letsencrypt-ocserv-or-more", "title": "Linux簡易配置Let's Encrypt證書及其在Anyconnect中的使用方法"},
{"keywords": "相关文章推荐下面是本次的聊天記錄文章搜索下面是本次的聊天記錄文章分類下面是本次的聊天記錄最新文章下面是本次的聊天記錄歸檔下面是本次的聊天記錄熱門標籤下面是本次的聊天記錄關於我下面是本次的聊天記錄關於部落格", "text": "作者: HoshinoTouko            时间: 2016-04-03            分类: 日常,IDC            访问: 1,022 次                            前些天用代理登陸了ConoHa後台，然後就提示我不允許充值了。上個月(2016-03)以來就有不少友人跟我講被ConoHa給ban了充值，我一直很好奇是怎麼回事，因為我已經用了半年的ConoHa了，沒有出現此類現象。於是找客服談笑風生(用Live Chat)，讓客服幫忙解決。ConoHa客服的態度並不是很差，而且也很及時地解決了問題，前後大概十分多鐘。這次問題解決之後，ConoHa允許我使用代理課金。使用了Google翻譯，我用的是英語，客服回復日語。總結一下能夠成功的原因。誠懇，有禮貌，不要一上來就破口大罵信息真實其實ConoHa此舉應該是在於清理一些濫用的客戶。有人會用自己的一大堆郵箱不斷的刷推廣以此獲利，ConoHa應該不允許此類現象發生。同樣IDCF關閉了預付費信用卡充值的渠道，也是意在清除部分濫用用戶。這樣對正常使用的用戶百利而無一害。下面是本次的聊天記錄Customer Center : Thank you for your inquiry. Depending inquiry situation, you might get time to get back. It should be noted that, because there are times when that is suddenly cut by the impact of the connection line, in that case there is trouble, but please contact us again. Hoshino Touko like : Hello Customer Center : Hello Hoshino Touko like : I can not charge my ConoHa accountCustomer Center : Check. please wait.Hoshino Touko like : OKCustomer Center : was detected unauthorized charge operation. Therefore, we conduct the limit. It will be considered such as the connection based on misrepresentation, but how about you?. Oracle RightNow CX Cloud Serviceチャット・サービスとの通信が切断されました。接続を復元するため、しばらくお待ちください。 切断まであと240秒です。 Connection has been restored. Oracle RightNow CX Cloud Serviceチャット・サービスとの通信が切断されました。接続を復元するため、しばらくお待ちください。 切断まであと240秒です。 Connection has been restored.Hoshino Touko like : YesHoshino Touko like : You know, I live in chinaHoshino Touko like : And I can not connect to conoha console panel everytime due to the GFWHoshino Touko like : So I have to use some proxy to ensure that I can use ConoHa wellCustomer Center : the other guests, but seems to be able to connect even from China, do you still can not connect from a different environment and a different network?Hoshino Touko like : YesHoshino Touko like : My ISP named China Mobile is different from other ISP in ChinaHoshino Touko like : The proxy's IP address is '45.32.*.* 'Customer Center Is your name real name:? Why What Japanese name?Hoshino Touko like : That's my Japanese nameHoshino Touko like : I plan to study in JapanHoshino Touko like : If you forbid using proxy, I will not do it the next timeCustomer Center : Because I ask for your registration in the real name, Can you registered in your name in China? After that, we'd like a fix because it leaks address to the registered address.Hoshino Touko like : OKHoshino Touko like : What should I do nextCustomer Center : Can you fix now? Please tell me so and I determine if the registration is complete.Hoshino Touko like : OKHoshino Touko like : please wait me to fix itCustomer Center : Yes, thank you.Hoshino Touko like : DoneHoshino Touko like : Thank you for waiting meCustomer Center : Thank you very much. Is it possible to register ask the room number of the registered address?Hoshino Touko like : OKCustomer Center : Thank you, thank you.Hoshino Touko like : doneCustomer Center : Thank you very much. To release the only time limit. Please try to charge again.Hoshino Touko like : OKHoshino Touko like : Can I use my cloud VPS as a proxy to charge my account?Customer Center : Yes, Allows only customers.Hoshino Touko like : Thank you a lot!Hoshino Touko like : It's very kind of you to help meCustomer Center : Thank you very much. Thank you.                                   标签: conoha, VPS, GMO                            相关文章推荐                                                                    上一篇: 個人使用過的伺服器/Hosting等匯總與簡評            下一篇: 拒絕百度 - 使用反向代理訪問Google                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.084 s.", "link": "https://touko.moe/blog/conoha-recharge-problem", "title": "ConoHa無法支付/充值(代理登錄導致)解決過程 "},
{"keywords": "IDCF昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明Linode昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明GMO (z.com / ConoHa)昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明Vultr(Choopa)昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明Softlayer(IBM)昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明相关文章推荐昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明文章搜索昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明文章分類昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明最新文章昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明歸檔昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明熱門標籤昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明關於我昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明關於部落格", "text": "作者: HoshinoTouko            时间: 2016-03-02            分类: Dev,web,IDC            访问: 1,931 次                            國內外總是有各種各樣的IDC/IDC分銷商/特殊雲服務提供方，三年來我也使用過不少服務。我將在這個博文下記錄下我對我使用過的所有服務商的簡介/簡評/推薦程度，方便還未使用過的友人進行選擇。  如未特殊註明，所有的子條目全部按推薦程度進行排序  文中出現的跳轉鏈接大多為推廣連接，如果不喜請於地址欄手動輸入IDCF雅虎日本機房軟銀線路(超讚，中國電信和移動特別快！聯通沒有測試過)VMWare虛擬化的伺服器提供VM,DNS,Storage等服務優秀的Dashboard，可以直接在後台配置Firewall，NAT轉發，VPN連接(用於登入伺服器)，追加IP等操作價格優惠，特別優惠儘支援信用卡付款。預付費卡不可用IDCF地址評論中小型站長/扶墻用特別讚，CPU限制和ToS較為嚴格。中國行動電話註冊需要通過客服人工驗證，會有一名叫做Megumi的妹子用英文和你聯繫。需要使用SSH Key進行身份確認，如果小白可以繞道。LinodeLinode機房KDDI線路(電信 聯通優秀，移動會不定時不定地區封鎖IP地址)提供日本 美國 新加坡等多地機房KVM/Xen虛擬化優秀的Dashboard，有VM使用資源的Graphics查看性價比高，極高支援信用卡付款Linode地址  評論説是服務最好的機房。不過隨著用戶數量的增加，回復工單的速度也在減慢。可以提交工單更換IP地址，這是繞過某墻的一個好方法。帶寬似乎是獨立的！測試中基本都能跑到150Mbps但是這幾個月使用下來，存在一些問題。比如經常宕機，一個月宕機了兩次（用的是Xen虛擬化，KVM應該會好一些）。還有就是移動會對Linode日本機房的IP地址進行封鎖，第一次可以連接，ssh/http什麽的。然後立刻就timeout。106.185.0.0-106.187.0.0都存在這個問題。GMO (z.com / ConoHa)GMO機房NTT線路(聯通直連，移動優秀，電信繞路美國一圈)提供日本 美國 新加坡(單程CN2)機房(新出了社會主義機房，位于東南亞部分國家)KVM虛擬化同樣較為優秀的Dashboard，支援Windows性價比高支援Alipay付款擁有VPS,Database,DNS(不推薦),MailServer,Hosting(z.com only),Domain register(z.com only)等服務ConoHa地址z.com地址  評論GMO應該是爭議最大的一家。搜索ConoHa，看到的幾乎都是罵聲，說隨意刪除機器什麼的。很簡單的原因，因為違反了ToS。雖說ConoHa是無限制流量，但是長時間大量佔用帶寬是不被允許的(z.com標明流量，但是我沒有測試過)。機器硬件特別好！可以說是我使用過的硬件體驗最好的一家。編譯軟體之類的速度都特別快，也不容易輕易的當機。2015年10月以前，電信直連NTT。至於後來發生了什麼導致繞路。。。自知z.com扮演的角色就像是阿里雲/萬網扮演的角色，在這裏可以找到大量的雲基礎服務，價格還算公道。Vultr(Choopa)Choopa機房中國移動ping值在100以内，電信或者聯通ping稍高，但是很穩定(界面改版之後就變得很穩定了，不是很懂)機房有美國、英國、德國、法國、日本、澳洲KVM虛擬化dashboard去年的时候特别烂，今年好了许多性價比高，最低$5 768RAM+3.6MHz支付渠道同DO，可以使用Paypal和信用卡，同樣不支持虛擬信用卡Vultr地址評論我曾經注冊過Vultr的賬號，但是當時花樣爆炸的綫路，間歇性停機的機房，我開了一天就沒再用了。半個月前我又登上去，發現他們的Dashboard改版了。抱著對它能夠脫胎換骨的期望我新建了一臺機子，發現比之前好太多。價格特別便宜，和DigitalOcean一個消費級別，希望不要再被某些人玩壞了。Softlayer(IBM)Softlayer機房自有綫路提供位于日本 新加坡 香港 美國等等機房(遍佈世界)直接購買價格較貴，可通過分銷購買評論昨日（2016-04-01）獲知，Softlayer撤下了所有的和中國直連的綫路，原因是不值賺不到錢。似乎會在今後直接牽綫到上海，預計時間不明SL我比較喜歡的原因是他的綫路(雖然現在也快爆炸了)日本SL電信從香港走，透過SL的内網到日本，延時很低。不過移動會繞路新加坡，有些討厭。SL分銷商很多，資質良莠不齊。個人比較推薦星光互聯，提供日本和香港的SL銷售。星光互聯未完待續。高三學業繁重，我會用課餘時間慢慢更新完這篇文章                                   标签: IDC, WebHosting                            相关文章推荐                                            在VPS上快速部署Whmcs＋Vesta售賣PHP虛擬主機                                                        上一篇: phpMyAdmin出現500錯誤問題及解決方案            下一篇: ConoHa無法支付/充值(代理登錄導致)解決過程                                    Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.113 s.", "link": "https://touko.moe/blog/those-idc", "title": "個人使用過的伺服器/Hosting等匯總與簡評"},
{"keywords": "相关文章推荐安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考文章搜索安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考文章分類安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考最新文章安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考歸檔安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考熱門標籤安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考關於我安裝Python2.7或更高安裝setuptools和pip查看Python版本創建軟鏈接總結參考關於部落格", "text": "作者: HoshinoTouko            时间: 2016-05-27            分类: Linux,Dev            访问: 464 次                            CentOS默認的Python是2.6版本，有的函數無法使用。CentOS自身對Python2.6又存在依賴，升級有一些麻煩。安裝Python2.7或更高首先到 https://www.python.org/downloads/ 下載新版本的Python源碼 (Gzipped source tarball)tar -xvf Python-2.7.8.tgzcd Python-2.7.8./configure --prefix=/usr/local/python2.7makemake install安裝setuptools和pip注意，一定要用python2.7來執行命令wget https://bootstrap.pypa.io/ez_setup.py -O - | python2.7easy_install-2.7 pip之後就可以透過pip2.7來操作pip，透過python2.7來運行程式pip2.7 install [packagename]pip2.7 install --upgrade [packagename]pip2.7 uninstall [packagename]python2.7 xx.py查看Python版本python –V如果需要直接使用python運行命令創建軟鏈接ln -fs /usr/local/python2.7/bin/python2.7 /usr/bin/python因為CentOS的重度依賴，防止yum運行出錯，修改/usr/bin/yum的Python目錄為原目錄替換#!/usr/bin/python為#!/usr/bin/python2.6總結講道理CentOS太難受了，快來投入Debian大家族的懷抱要不是生產環境修改太麻煩我就重裝了(參考https://segmentfault.com/a/1190000000654227                                   标签: python, pip                            相关文章推荐                                                                    上一篇: 拒絕百度 - 使用反向代理訪問Google            下一篇: Debian/CentOS chacha20依賴安裝                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.029 s.", "link": "https://touko.moe/blog/update-py26-centos6", "title": "CentOS6升級Python2.6小記"},
{"keywords": "強烈建議開啟HTTPS前期準備下載並安裝7ghost注意事項寫在最後相关文章推荐前期準備下載並安裝7ghost注意事項寫在最後文章搜索前期準備下載並安裝7ghost注意事項寫在最後文章分類前期準備下載並安裝7ghost注意事項寫在最後最新文章前期準備下載並安裝7ghost注意事項寫在最後歸檔前期準備下載並安裝7ghost注意事項寫在最後熱門標籤前期準備下載並安裝7ghost注意事項寫在最後關於我前期準備下載並安裝7ghost注意事項寫在最後關於部落格", "text": "作者: HoshinoTouko            时间: 2016-05-01            分类: Linux,Dev,php,web            访问: 1,693 次                              百度作的死，連起來可以繞地球一圈。在距離高考還有一個月的時候，我找了個空餘時間寫下這篇短短的教程，希望有能力的人能夠拒絕使用百度，轉向使用Google，Bing等搜索引擎。步驟很簡單，幾乎沒有技術含量。前期準備一個PHP空間，或者是一台VPS，或者是一個Docker，講白了就是PHP運行環境基礎的建站知識下載並安裝7ghostGithub這是一個PHP Reverse Proxy APP，先前託管於google code。編輯 ./_admin/data/config.php，修改密碼打開 yourdomain.com/_admin 進行配置注意事項強烈建議開啟HTTPS同時使用301強制跳轉HTTPS file/ '.htaccess'RewriteEngine onRewriteBase /RewriteCond $1 ^(index\\.php)?$ [OR]RewriteCond %{REQUEST_FILENAME} -f [OR]RewriteCond %{REQUEST_FILENAME} -dRewriteRule ^(.*)$ - [S=1]RewriteRule . /index.php [L]#AddRewriteCond %{HTTPS} !^on$ RewriteRule (.*) https://%{SERVER_NAME}%{REQUEST_URI} [R=301] Apache用戶可以使用自帶的驗證功能，具體配置參照這篇文章寫在最後本文只是提供一個看到外面世界的方法，沒有任何其他的意思。若是一味地對XX事件好奇，一味地想著看到一些別人不知道的事情並以此為樂，我勸這些人還是乖乖的用百度好了。Google只是一個更廣闊的搜索平台，一個更準確的英文搜索引擎，一個沒有太多金錢污染的搜索結果的地方。希望各位能夠合理使用Google                                   标签: google, php, ReverseProxy, 7ghost                            相关文章推荐                                            關於EasyPass                                Windows下Xampp證書錯誤                                Hello, Symfony                                phpMyAdmin出現500錯誤問題及解決方案                                                        上一篇: ConoHa無法支付/充值(代理登錄導致)解決過程             下一篇: CentOS6升級Python2.6小記                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.049 s.", "link": "https://touko.moe/blog/reproxy-to-google", "title": "拒絕百度 - 使用反向代理訪問Google"},
{"keywords": "chacha20依賴安裝相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2016-05-28            分类: Linux,Dev            访问: 1,511 次                            chacha20依賴安裝#Debian / Ubuntuapt-get updateapt-get install build-essential -y#CentOS / RHELyum groupinstall 'Development Tools'wget https://github.com/jedisct1/libsodium/releases/download/1.0.10/libsodium-1.0.10.tar.gztar -xf libsodium-1.0.10.tar.gz && cd libsodium-1.0.10./configure && make && make installldconfig如果是CentOS / RHEL，需要vi /etc/ld.so.conf添加/usr/local/lib然後ldconfiglibsodium新版版本號可以在https://github.com/jedisct1/libsodium/releases找到。                                   标签: Linux, Notes                            相关文章推荐                                            VMWare配置Debian8                                phpMyAdmin出現500錯誤問題及解決方案                                CentOS6.x 手动升级git至2.2.1                                在Linux下编译安装go                                                        上一篇: CentOS6升級Python2.6小記            下一篇: 創建私人登入憑證 - 幾種安全的SSH驗證方式                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.040 s.", "link": "https://touko.moe/blog/enable-chacha20", "title": "Debian/CentOS chacha20依賴安裝"},
{"keywords": "相关文章推荐下載Symfony安裝升級Symfony文件創建一個新工程運行應用文章搜索下載Symfony安裝升級Symfony文件創建一個新工程運行應用文章分類下載Symfony安裝升級Symfony文件創建一個新工程運行應用最新文章下載Symfony安裝升級Symfony文件創建一個新工程運行應用歸檔下載Symfony安裝升級Symfony文件創建一個新工程運行應用熱門標籤下載Symfony安裝升級Symfony文件創建一個新工程運行應用關於我下載Symfony安裝升級Symfony文件創建一個新工程運行應用關於部落格", "text": "作者: HoshinoTouko            时间: 2016-06-20            分类: Dev,php            访问: 445 次                            問ppp什麽php框架好，ppp不假思索的說Symfony。這幾天有時間稍微上手，便愛上了它。這裏用於記錄使用該框架的一些基礎步驟（順便也當作一個剪貼板使用）。First Step下載Symfonyphp -r \"readfile('http://symfony.com/installer');\" > symfony.phar安裝php symfony.phar升級Symfony文件php symfony.phar self-update創建一個新工程php symfony.phar new NAME運行應用php bin/console server:run localhost:8000                                   标签: php, Symfony                            相关文章推荐                                            關於EasyPass                                Windows下Xampp證書錯誤                                拒絕百度 - 使用反向代理訪問Google                                phpMyAdmin出現500錯誤問題及解決方案                                                        上一篇: 創建私人登入憑證 - 幾種安全的SSH驗證方式            下一篇: 關於高考                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.033 s.", "link": "https://touko.moe/blog/hello-symfony", "title": "Hello, Symfony"},
{"keywords": "开始安装先更新一下yum基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks安装setuptools pip m2crypto git基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks安装cymysql基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks从gayhub上clone一个shadowsocks-manyuser工程基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks开启服务基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks或者可以开启后台服务基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks或者可以新建一个screen用于后台运行基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks相关文章推荐基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks文章搜索基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks文章分類基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks最新文章基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks歸檔基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks熱門標籤基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks關於我基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）前端（ss-panel）Special Thanks關於部落格", "text": "作者: HoshinoTouko            时间: 2015-09-17            分类: Linux,Dev            访问: 3,594 次                              蛤？  基本框架 PHP5.3+ &&  MySQL5+ &&  Apache or Nginx后端（Manyuser）开始安装先更新一下yumyum clean all yum update  安装setuptools pip m2crypto gityum install python-setuptools python-pip m2crypto git 安装cymysqlpip install cymysql从gayhub上clone一个shadowsocks-manyuser工程git clone -b manyuser https://github.com/mengskysama/shadowsocks.git  當然也可以選擇breakwa11的版本。根據個人喜好而定。在MySQL中新建一个shadowsocks数据库或者将/root/shadowsocks/shadowsocks中的shadowsocks.sql导入，在这之前可以对其进行一些修改然后修改/root/shadowsocks/shadowsocks/Config.py文件（数据库信息）同时修改/root/shadowsocks/shadowsocks/config.json（默认使用RC4-MD5，建议改掉）开启服务cd /root/shadowsocks/shadowsocks  python server.py    或者可以开启后台服务cd /root/shadowsocks/shadowsocks      nohup python server.py &   或者可以新建一个screen用于后台运行如果没有设置开机启动项，reboot之后务必重新开启服务前端（ss-panel）ss-panel和shadowsocksManyuser可以连接起来的，所以比较方便源代码地址：https://github.com/orvice/ss-panel将其中sql文件夹下的文件修改为自己对应需要的账户密码，记得修改MD5或者salt加密字符串同时修改lib/config-sample.php为config.php并进行一些设置对前端进行安装，管理员地址在 软件安装地址/admin下Special Thanksfrankweisimon博客                                   标签: Linux, shadowsocks                            相关文章推荐                                            VMWare配置Debian8                                Debian/CentOS chacha20依賴安裝                                phpMyAdmin出現500錯誤問題及解決方案                                使用Vnet中转加速TCP/UDP流量                                                        上一篇: 欢迎使用 Typecho            下一篇: 在Linux下编译安装go                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.062 s.", "link": "https://touko.moe/blog/centos-shadowsocksmanyuser-ss-panel", "title": "CentOS配置Shadowsocks Manyuser + ss-panel"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2015-09-01            分类: 日常            访问: 1,278 次                            如果您看到这篇文章,表示您的 blog 已经安装成功.                                   标签: none                            相关文章推荐                                                                    上一篇: 没有了            下一篇: CentOS配置Shadowsocks Manyuser + ss-panel                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.066 s.", "link": "https://touko.moe/blog/start", "title": "欢迎使用 Typecho"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2016-07-06            分类: 日常            访问: 714 次                            距離高考已經不知不覺一個月了，終於算是能夠稍微安靜下來，做一些自己想做的事情。現在也能夠稍微客觀地總結一下高三的日子。或許以後再也無法如此清晰的回憶起這段時間。2016年初之時有一場省單科質檢，我的省排名大概在4k左右。那次大概是整個高中以來最差的幾次考試之一，但可能是因為本身就沒心沒肺的，我沒有在意這次的成績，倒是父母和班主任非常擔心。特別是我媽，從各種地方收集學習方法，想讓我嘗試。但是學習是為了自己而學，是一個從外界吸收能量來給自己添磚加瓦的過程，如果過分依賴外力，或是踩著別人的腳印，受外界影響的成分占大多數的話，學習的過程將會沒有太多意義。通過這種方式最後所學的知識也會很快流失。所以我依照自己的步伐走。所謂狀元的話、備課組的忠告當成是心靈雞湯看看就忘掉。每天根據自己的安排、自己當下的情況進行學習。比如每天做的理綜、數學的量，每天的溫習計畫，都由我自己來安排。不能太多，也不能太少。多了做不完會挫敗自信心，少了又達不到複習的效果。保持持續的訓練很關鍵。直到高考前一週，合適頻率的訓練都是十分必須的。我沒有去特地分塊複習某個章節，因為讓我這個人靜下心來看課本裏面無聊的內容是幾乎不可能的。適量的練習，對錯題的分析，讓我能夠一邊做卷子，一邊進行複習。雖然一張考卷不能涵蓋所有的知識點，但是量一旦積累起來，就能達到全書複習的效果。考前一個月真的非常累。那時候早上七點多去學校，背背書，還沒半個小時就睡著了。九點整醒過來，如果狀態好可以做一卷理綜，狀態不好就只能做選擇題然後繼續趴著睡覺。大概下午和晚上才可以清醒一些。後座有個笨蛋可以戳我讓我醒過來是一件非常幸福的事情，不然我可能會睡一整天。高考前一兩天就不要做卷子了。。我考前做了語文和數學結果都考爆炸，理綜和英語放鬆了幾天，反而考出了不錯的成績。考前一兩天看點書，看看容易錯的地方。高考複習是從簡單到困難，再從困難到簡單的過程。反正考前看難題也沒時間想出來，就算想出來了高考也不會考出現過的題目。所以為什麼考前還要埋在題海裏面呢？出來透透氣是個不錯的選擇。高考一定要清醒。六月雖說不算非常熱，但是氣溫足夠讓人昏昏欲睡。藥物效果真的很好，例如咖啡因，Modafinil之類的東西，絕對是不錯的選擇。具體還是要因人而異，保持清醒又不至於過度興奮就差不多了。熟練度很重要。理綜發下來有三分鐘看考卷，這三分鐘內我花了30秒做完了生物選擇題，剩下兩分半做了四題化學。整份理綜做下來，化學可以故意放慢速度降低錯誤率，其他的科目對熟練度要求真的很高。今年的全國卷生物算是一次創新，大量的文字題讓很多死讀書的人束手無策。所以說學習是一個活的過程，死讀書是沒用的。這句話適用於所有學習的過程。成績還算看得過去，不過語文和數學少了20分（加上20分就可以去上交了吧）。現在糾結分數也沒什麼意義，路已經走完了，接下來就是帶著某人奔跑了。高考不是結束，而是開始。                                   标签: CEE                            相关文章推荐                                                                    上一篇: Hello, Symfony            下一篇: Windows下Xampp證書錯誤                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.044 s.", "link": "https://touko.moe/blog/about-cee", "title": "關於高考"},
{"keywords": "准备工作下载1.4.2源码编译编译成功信息测试安装go1.5另：编译安装go程序源代码包参考资料相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2015-09-18            分类: Linux,Dev            访问: 1,801 次                              go是一种与C很像的开源语言，于2009年下半年发布  使用Tor需要go语言环境的支持。然而它似乎没有CentOS的安装包，我查找了一些资料编译安装go，并记录下全过程  使用的系统：CentOS 6.7   Raspbian准备工作在开始之前，创建一个screen，保证工作顺利进行screen -r  screen -S go  安装go所需要的软件install bison ed gawk gcc libc6-dev make  设置一下环境变量vi /etc/profile    P.S.此路径在CentOS6，Raspbian（基于Debian）下测试通过添加以下语句export GOROOT=/goexport PATH=$PATH:$GOROOT/binexport GOPATH=$HOME/Applications/Goexport GOROOT_BOOTSTRAP=$GOROOTexport GOBIN=$GOROOT/bin  P.S.GOROOT go程序根目录GOPATH go工程默认路径更新环境变量并验证source /etc/profileenv  下载1.4.2源码  根据谷歌官方给出的消息，安装go1.5之前需要先安装go1.4wget https://storage.googleapis.com/golang/go1.4.2.src.tar.gztar -zvxf go1.4.2.src.tar.gz  mv go $GOROOT    由于网络环境原因，如果无法从谷歌官方镜像下载go源代码包，可以选择从国内镜像下载  官方页面      国内镜像编译这个过程将因主机性能而异。放置在ConoHa上的KVM VPS耗时约两分钟，raspberry 2 耗时约35分钟。cd $GOROOT/src./all.bash#or./make.bash不进行测试，直接编译源码。可以增加速度，但不推荐编译成功信息Checking API compatibility.  Skipping cmd/api checks; hg not availablereal    0m1.320suser    0m0.486ssys     0m0.132sALL TESTS PASSEDInstalled Go for linux/amd64 in /*$GOROOT*/  Installed commands in  /*$GOROOT*/bin  测试在GOPATH下使用vim新建一个HelloWorld.gopackage main  func main()   {      println(\"Hello\", \"world\")  }  Thengo run HelloWorld.go安装go1.5按照以上步骤重复一遍wget https://storage.googleapis.com/golang/go1.5.1.src.tar.gztar -zvxf go1.5.1.src.tar.gzmv go $GOROOT ...另：编译安装go程序源代码包将得到的源代码放置在$GOPATH/src/YourApplicationName并运行go install *YourApplicationName*参考资料go项目githubgo官方支持文档go github某issue                                     标签: Linux, golang, go, google                            相关文章推荐                                            VMWare配置Debian8                                Debian/CentOS chacha20依賴安裝                                拒絕百度 - 使用反向代理訪問Google                                phpMyAdmin出現500錯誤問題及解決方案                                                        上一篇: CentOS配置Shadowsocks Manyuser + ss-panel            下一篇: 梦呓 我与开发的故事                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.060 s.", "link": "https://touko.moe/blog/compile-and-install-go-linux", "title": "在Linux下编译安装go"},
{"keywords": "相关文章推荐文章搜索文章分類最新文章歸檔熱門標籤關於我關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-05            分类: 日常,Dev            访问: 739 次                            随便说点什么。反正没人听，就写出来吧我和电子设备有着不解的缘分第一次接触电脑，我还在上幼儿园。那时候经常看老爸用CAD制图。当时只是好奇罢了后来在邻家哥哥的指引下，玩起了sc1当时什么都不会，看哪个兵长的比较厉害就去造它。当然没能赢过电脑，不过一直在惊讶 原来电脑是这么厉害的东西之后几年是在游戏中与电脑相处的，星之卡比，sc1，war3，泡泡堂，跑跑卡丁车……直到我有一天点开了War3 Map Editor当时的第一反应就是激动，混杂着那种仿佛站在新世界大门前的懵懂与胆怯。那是我第一次接触 制造游戏，而不是享受游戏学习了第一门语言-Jass。虽然只是用来写魔兽地图的，而且已经完全忘掉了。还记得当时，为了抓紧有限的玩电脑的时间，我悄悄地把Jass教程打印出来半夜看。它们现在被放置在我的书架上发布了第一张，也是唯一发布的一张地图在GA-也就是地精研究院上，竟收获了300多的下载量，虽说只是一张非常简单的地图。我第一次感受到了作为开发者的乐趣四年级接触了html和服务器。当时并不懂事，用着偷菜和抢车位多出来的时间，建了一个phpwind的班级论坛。然而并没有什么用，因为同学们都把偷菜和抢车位多出来的时间拿去好友买卖了。这之后也没怎么碰过网站开发，继续玩我的war3地图。初一发生了各种各样的事，我们暂且不提。初二初三都在划水，我们也暂且不提吧（初二买了人生第一台智能设备 原道N5pro 当时还是安卓2.3时代，电脑报还在报道SandyBridge架构，诺基亚还在统治市场。自主招生上了高中，比别人多出了两个多月时间。跟着学校的进度学了点cpp，也知道父母不会让自己报名计算机竞赛，能学多少是多少拿到了第一部智能机，我自己选择的windowsphone Lumia520。第一次接触到WordPress，买了个枫叶主机的虚拟空间，用同学的域名建了个站。又过了将近一年网站大概是忘记续费被关停了。后来重新搭了个wp博客，买了自己的域名。开始学习CSharp，VB。把林政老师的深入浅出wp8.0学完，写了个计算器，写了个贪吃蛇。高一暑假结束了。发现微软乱搞，便把Csharp扔在一边，开始学习php。研究型学习弄了个能传数据的贪吃蛇，成功后我兴奋了半个月。（真是渺小的满足感呢又是一年之后，我开始努力成为不务正业的运维。在frankwei的帮助下建起了第一条ss，查找文档给vps装上各种有趣的程序，开始接触电路板，买了一块树莓派……还认识了一大堆有着相同爱好的朋友。我在成为专业开发者的路上刚刚迈出第一步，未来还有很多困难需要去面对                                   标签: 开发, Me                            相关文章推荐                                                                    上一篇: 在Linux下编译安装go            下一篇: 使用IDM+百度云网页版 高速下载百度盘内容                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.044 s.", "link": "https://touko.moe/blog/whispers-my-way-to-developer", "title": "梦呓 我与开发的故事"},
{"keywords": "本文完成於2015年10月。日前(2016-01-01)，百度已經封鎖了如下內容发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试网页版百度云发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试IDM发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试相关文章推荐发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试文章搜索发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试文章分類发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试最新文章发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试歸檔发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试熱門標籤发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试關於我发生了什么？不需要下载 辣鸡 百度云客户端 步骤请不要相信从搜索引擎处返回的信息，同时请支持正版下载速度实际测试關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-05            分类: Tech            访问: 2,595 次                            本文完成於2015年10月。日前(2016-01-01)，百度已經封鎖了如下內容pan.mb.baidu.com/pan/index.php網頁的訪問  通過修改Chrome UA的方式得到wap網頁的方法  IDM普通的獲取下載地址的方式(如果還需要用IDM下載，請根據IDM軟件提供的特殊方式強制得到下載地址  多線程下載(這意味著IDM失去了最強大的部分)    听说百度云限速好久了发生了什么？百度近半年疯狂更新客户端来达到限制用户速度的效果。同时，如果不使用百度云管家，将无法在网页版中下载较大文件这个问题很好解决。而且不需要下载 辣鸡 百度云客户端 步骤网页版百度云首先，资源一定要在自己的网盘里打开下面这个网页http://pan.mb.baidu.com/pan/index.php  这是一个针对百度手机浏览器专门设计的百度云页面，比普通的wap版本好看多了如果在这个页面中点下载，只有单线程，速度不是那么理想这时候就需要下载IDM请不要相信从搜索引擎处返回的信息，同时请支持正版打开官网下载，可以免费使用30天。IDM官网购买地址一般情况下，只要IDM在后台运行，浏览器点击下载链接的动作都能被捕捉如果没有捕捉成功，以Chrome为例，打开下载详情页，把链接地址复制到IDM中就可以了下载速度实际测试网络环境 12M移动宽带  Chrome单线程 200-300kb/s  IDM 1.5m/s （跑满带宽）                                     标签: baiduyun, IDM                            相关文章推荐                                                                    上一篇: 梦呓 我与开发的故事            下一篇: Windows10 10536 AoW 测试                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.054 s.", "link": "https://touko.moe/blog/baiduyun-speedup", "title": "使用IDM+百度云网页版 高速下载百度盘内容"},
{"keywords": "应用运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？游戏运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？其他应用运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？相关文章推荐运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？文章搜索运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？文章分類运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？最新文章运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？歸檔运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？熱門標籤运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？關於我运行环境某些东西关于应用部署运行情况测试AoW是什么AoW后台运行情况AoW下一步发展方向？關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-11            分类: Tech,IT            访问: 932 次                              本文是我近期对 Windows10 Android on Windows 测试的整理，尽量保持客观。如有不妥之处请指出  如果您想测试但苦于没有环境，请在下面留言。运行环境RM-914 港版  系统版本号10.0.10536.1004  配置CPU Snapdragon MSM8260A  GPU Adreno225  1G RAM  1280x768  某些东西虽说是港版，但是升级10之后并没有带AoW运行环境。我使用了智机网提供的教程把它装上了  关于应用部署目前似乎没有发现应用大小限制。总共可以部署18个应用。超过18个应用后继续部署将不会显示在应用列表部署的时间长短不一，需要耐心等待运行情况测试应用日常应用Writely(一款Markdown编辑器)正常运行  QQ能够运行。输入账号密码后点击登录，卡在 登陆中 原因未知。  微博正常运行。可正常登录进行日常操作。可发送安卓虚拟机内的图片。进入速度比较快。有闪屏的现象，原因未知，不影响使用。  网易云音乐正常运行。可登录，听歌，分享歌曲等。无法锁屏播放音乐。打开屏幕后恢复播放。  支付宝打开后闪退。  BlackLight正常运行。读取api时有点问题，其他一切正常  水表助手正常运行。  Javelin(一款浏览器)正常运行。对Javelin进行浏览器内核测试的时候，又发现了一些有趣的信息。下文将提到  Chrome打开后闪退。  Google Now Launcher正常运行。提示需要最新谷歌框架。无法使用  ACG类应用布卡漫画正常运行。无法使用新浪微博 QQ登录，可以使用手机号。  Bilibili正常运行。无法播放视频，但是有声音。所有的解码器均测试过。  布丁动画正常运行。同样无法播放视频，有声音。  NHbooks正常运行。我使用的是局域网内http透明代理，有50％的时间无法访问网络。一旦网络访问成功一切正常。  轻文轻小说正常运行。由于没有账号，无法进行账号登录测试。  游戏Lovelive盛大国服正常运行。卡顿，练习预判的最佳选择。  乖离性百万亚瑟王bilibiliSDK正常运行。读条联网卡顿。  偶像大师能打开，读条一半闪退  MiNE正常运行。内置的测试打开后软件闪退(等于无法进行游戏)  清明节的鬼很萌正常运行。  死亡直播间正常运行。  其他应用CPU-Z正常运行。CPU-Z提供了大量信息，之后会提到。  fqrouter2能够打开。提示无法解压Zip  AoW是什么个人根据从CPU-Z中获取的信息和实际体验判断，AoW是一个运行在Windows10上的Hyper-V虚拟机。包括了Android4.4.4的运行环境。这个虚拟机有着自己独立的存储空间。就像Android根目录那样，文件夹一应俱全。在AoW上保存的文件全部都将保存在/storage/sdcard0中。各个AoW应用都可以访问\"内置sd卡\"，Win10应用不行。(所以我认为AoW目前只是一个测试的版本)但是微软不止做了一个虚拟机。在AoW中调用Android的分享功能，可以分享至AoW应用和Win应用。然而Win应用只能分享至Win应用。微软做了接口，但目前只是半成品。关于AoW内应用权限，理论上来说除了沙箱式的存储外，与Win应用没有差别。除了获取电池信息存在问题。浏览器内核测试表示，Javelin浏览器使用的是Chrome33.0版本内核。AoW后台运行情况当系统空闲时，AoW不会在后台运行。所以每当一段时间没有运行AoW应用或者重启后打开AoW应用，都要经历一个虚拟机重新启动的过程，大概在20-30秒。这是一个很可怕的事情。在一台ARM架构机器上完成这个过程，并且我在CPU-Z测试中发现其仅占用60+的CPU与内存。微软的这个玩笑开的有点大。当然如果让用户等待这20-30秒，用户肯定不乐意。而且锁屏之后再解锁，应用闪退概率有80+。所以按照950之前的机器的性能，流畅运行AoW估计只是一个梦想。(950没钱测试，不做评价AoW下一步发展方向？兼容更多的安卓应用功能，包括但不限于分享 调用应用 连接网。  用特殊的方法替代谷歌服务。  加强AoW的稳定性    至于你问我为什么那么喜欢研究AoW？我只能说无可奉告                                   标签: Windows, Windows Mobile 10, Android on Windows, AoW                            相关文章推荐                                                                    上一篇: 使用IDM+百度云网页版 高速下载百度盘内容            下一篇: CentOS6.x 手动升级git至2.2.1                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.050 s.", "link": "https://touko.moe/blog/aow-10536", "title": "Windows10 10536 AoW 测试"},
{"keywords": "参考资料发生了什么?解决方法  完成删除旧版本git发生了什么?解决方法  完成安装所需环境发生了什么?解决方法  完成下载git 2.2.1 并安装，然后配置环境变量发生了什么?解决方法  完成看看git版本发生了什么?解决方法  完成Then发生了什么?解决方法  完成相关文章推荐发生了什么?解决方法  完成文章搜索发生了什么?解决方法  完成文章分類发生了什么?解决方法  完成最新文章发生了什么?解决方法  完成歸檔发生了什么?解决方法  完成熱門標籤发生了什么?解决方法  完成關於我发生了什么?解决方法  完成關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-13            分类: Linux,Dev            访问: 1,247 次                              先给CentOS6点个蜡烛参考资料http://www.tuicool.com/articles/Y3eqIf发生了什么?我在使用Hostker新版应用的时候发现无法将应用clone至本地。报错信息如下error: The requested URL returned  error: 401 Unauthorized while accessing *yourGitUrl*  fatal: HTTP request failed  经过查找发现，CentOS6系列自带的git版本是1.7.x，并不支持从软件源自动升级git版本查看git --version解决方法  删除旧版本gityum remove git  安装所需环境yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc  yum install gcc perl-ExtUtils-MakeMaker  wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz  tar zxvf libiconv-1.14.tar.gz  cd libiconv-1.14  ./configure --prefix=/usr/local/libiconv  make && make install  下载git 2.2.1 并安装，然后配置环境变量wget https://github.com/git/git/archive/v2.2.1.tar.gz  tar zxvf v2.2.1.tar.gz  cd git-2.2.1  make configure  ./configure --prefix=/usr/local/git --with-iconv=/usr/local/libiconv  make all doc  make install install-doc install-html  echo \"export PATH=$PATH:/usr/local/git/bin\" >> /etc/bashrc  source /etc/bashrc  完成看看git版本git --version  Then之后再使用git clone https://git-ct.smartgslb.com/xxxxx  克隆项目时，就会要求输入账号密码。push的时候也会自动要求输入。如果求方便的话可以用~/.netrc存储密码再加密一下。本文不再赘述。                                   标签: Linux, git, Hostker, CentOS 6                            相关文章推荐                                            VMWare配置Debian8                                Debian/CentOS chacha20依賴安裝                                phpMyAdmin出現500錯誤問題及解決方案                                在Linux下编译安装go                                                        上一篇: Windows10 10536 AoW 测试            下一篇: 方便的代码高亮框架highlight.js                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.046 s.", "link": "https://touko.moe/blog/centos6-update-git", "title": "CentOS6.x 手动升级git至2.2.1"},
{"keywords": "bootcdn(強烈推薦)一些链接获取使用修改主题的方法在博客程序中的用法jsdelivr一些链接获取使用修改主题的方法在博客程序中的用法cdnjs  一些链接获取使用修改主题的方法在博客程序中的用法开启功能一些链接获取使用修改主题的方法在博客程序中的用法网页标签用法一些链接获取使用修改主题的方法在博客程序中的用法Pagekit一些链接获取使用修改主题的方法在博客程序中的用法Wordpress一些链接获取使用修改主题的方法在博客程序中的用法Typecho一些链接获取使用修改主题的方法在博客程序中的用法相关文章推荐一些链接获取使用修改主题的方法在博客程序中的用法文章搜索一些链接获取使用修改主题的方法在博客程序中的用法文章分類一些链接获取使用修改主题的方法在博客程序中的用法最新文章一些链接获取使用修改主题的方法在博客程序中的用法歸檔一些链接获取使用修改主题的方法在博客程序中的用法熱門標籤一些链接获取使用修改主题的方法在博客程序中的用法關於我一些链接获取使用修改主题的方法在博客程序中的用法關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-15            分类: Dev,web            访问: 2,056 次                              Highlight.js是一个开源的JS框架，用于网页代码高亮。当它运行时，会自动读取pre标签的文本并自动识别语言。当然，也可以通过给class赋值做到手动设置语言。  使用方法很简单。一些链接官方github地址官方网站主题&效果预览下载地址获取可以直接下载JS文件并自行编译使用，或者任选以下两个CDN之一使用bootcdn(強烈推薦)在网页header处加入<link href=\"//cdn.bootcss.com/highlight.js/8.9.1/styles/default.min.css\" rel=\"stylesheet\">  在网页footer处加入<script src=\"//cdn.bootcss.com/highlight.js/8.9.1/highlight.min.js\"></script>  jsdelivr在header标签中加入<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/highlight.js/8.8.0/styles/default.min.css\">  在网页footer处加入<script src=\"//cdn.jsdelivr.net/highlight.js/8.8.0/highlight.min.js\"></script>  cdnjs  在网页header处加入<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.8.0/styles/default.min.css\">   在网页footer处加入<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.8.0/highlight.min.js\"></script>  使用开启功能只要在底部加入函数<script>hljs.initHighlightingOnLoad();</script>  即可网页标签用法<pre><code class=\"php\">    <?php echo 'hello world'; ?></code></pre>以此类推如果不想让pre中的代码高亮，给class加上nohighlight样式即可<pre><code class=\"nohighlight\">...</code></pre>修改主题的方法highlight.js提供了大量的主题，可以在 主题&效果预览 中挑选。例如我选择了\"vs\"主题，只要将引用的css修改为<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/highlight.js/8.8.0/styles/vs.min.css\">  就可以了在博客程序中的用法Pagekitsite->设置->Code将代码对应加入header和footerWordpress主题->编辑手动编辑header.php和footer.phpTypecho与WordPress同理，直接修改header和footer即可                                   标签: typecho, web, highlight.js                            相关文章推荐                                            我和typecho的第一次(                                                        上一篇: CentOS6.x 手动升级git至2.2.1            下一篇: 我和typecho的第一次(                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.118 s.", "link": "https://touko.moe/blog/howtouse-highlightjs", "title": "方便的代码高亮框架highlight.js"},
{"keywords": "相关文章推荐安装mod_rewritre规则代码高亮和disqus访问统计文章搜索安装mod_rewritre规则代码高亮和disqus访问统计文章分類安装mod_rewritre规则代码高亮和disqus访问统计最新文章安装mod_rewritre规则代码高亮和disqus访问统计歸檔安装mod_rewritre规则代码高亮和disqus访问统计熱門標籤安装mod_rewritre规则代码高亮和disqus访问统计關於我安装mod_rewritre规则代码高亮和disqus访问统计關於部落格", "text": "作者: HoshinoTouko            时间: 2015-10-16            分类: 日常,Dev,web            访问: 2,135 次                            迁移到typecho了。有人就问了，之前你明明吹pagekit都吹上天了，为啥又换那个坑爹作者啊摔！用不知名的编码存储blog信息就算了，还特么说换编码就换编码！！报警了不过pagekit还是很好用的，一次搭建之后连FTP都不要上就可以完成几乎所有功能，还有各种完善的ajax支持吹完了，来说正题。typecho结构简单，功能丰富，速度也很快，实乃我等蒟蒻的不二之选。我对其进行了一系列的配置安装我直接从github上clone了一份源码。为了防止迷之事情的发生，没有递归777整个public_html，而是选择了手动创建config.php并给了部分文件夹777权限  主题是我很早以前就盯上的字节猫。地址在 这里 超级好看！mod_rewritre规则初次访问的时候，可以发现typecho是通过伪静态的方式写url。表示看着那个index.php不舒服，遂去后台打开mod_rewrite支持。但是无论我怎么赋予权限都是开启失败，我就手写了一个.htaccess<IfModule mod_rewrite.c>RewriteEngine OnRewriteBase /RewriteCond %{REQUEST_FILENAME} !-dRewriteCond %{REQUEST_FILENAME} !-fRewriteRule ^(.*)$ /index.php/$1 [L]RewriteCond %{HTTP_HOST} ^www.touko.moe RewriteRule (.*) http://touko.moe/$1 [R=301,L]RewriteCond %{HTTPS} !^on$ RewriteRule (.*) https://%{SERVER_NAME}%{REQUEST_URI} [R=301] </IfModule>  大概是这个意思，当http需要的文件和文件夹不存在时，后台重写到index.php/filename。这样就模拟了typecho的伪静态。同时还有http请求和任意子域名全部301到https://touko.moe。代码高亮和disqus我稍微修改了一下主题的header.php和footer.php，让它支持代码高亮。还修改了comments文件和主题index.php的部分内容，加上了disqus评论。只需要加上几行代码，非常容易。访问统计字节猫提供的访问文章统计插件打不开，我便用了这个插件调用代码即可// 輸出訪問次數:<?php Views_Plugin::theViews(); ?>// 輸出最歡迎文章:<?php Views_Plugin::theMostViewed(); ?>还有站长统计，我也一样硬塞进去了233<script src=\"https://s4.cnzz.com/z_stat.php?id=2333333&web_id=23333333\" language=\"JavaScript\"></script>                                     标签: typecho, web, php                            相关文章推荐                                            關於EasyPass                                Windows下Xampp證書錯誤                                Hello, Symfony                                拒絕百度 - 使用反向代理訪問Google                                                        上一篇: 方便的代码高亮框架highlight.js            下一篇: 获取网易邮箱收件箱数量                                   Copyright© 2017 Touko's diary   .    由 Typecho))) 强力驱动 Theme by 字节猫™ 加载耗时：0.094 s.", "link": "https://touko.moe/blog/modify-typecho", "title": "我和typecho的第一次("}
]